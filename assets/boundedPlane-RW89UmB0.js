import{dF as x,dS as u,dR as E,dC as h,e8 as I,K as rn,e9 as an,ea as cn,eb as m,dW as l,cF as M,dV as p,ec as un,dT as C,ed as w,ee as gn,ap as bn,d7 as V,ef as fn,eg as ln,dU as U,eh as _,dH as B}from"./index-_f-whK0a.js";import{s as H,w as pn}from"./sphere-D2fPATKn.js";import{e as W}from"./mat4f64-Dk4dwAN8.js";import{A as D,M as dn,v as mn}from"./lineSegment-DWgH60KP.js";import{M as v,P as j,D as hn,O as $,y as In,c as r,f as N,H as Pn,x as Mn,U as wn,z as G,h as Nn,q as $n,w as Tn}from"./plane-Cg1zFZdF.js";const O=()=>rn.getLogger("esri.views.3d.support.geometryUtils.boundedPlane");class vn{constructor(){this.plane=v(),this.origin=M(),this.basis1=M(),this.basis2=M()}}const yn=vn;function P(n=on){return{plane:v(n.plane),origin:E(n.origin),basis1:E(n.basis1),basis2:E(n.basis2)}}function An(n,s,i){const e=Bn.get();return e.origin=n,e.basis1=s,e.basis2=i,e.plane=hn(0,0,0,0),A(e),e}function y(n,s=P()){return L(n.origin,n.basis1,n.basis2,s)}function Sn(n,s){u(s.origin,n.origin),u(s.basis1,n.basis1),u(s.basis2,n.basis2),Nn(s.plane,n.plane)}function L(n,s,i,e=P()){return u(e.origin,n),u(e.basis1,s),u(e.basis2,i),A(e),Rn(e,"fromValues()"),e}function A(n){j(n.basis2,n.basis1,n.origin,n.plane)}function X(n,s,i){n!==i&&y(n,i);const e=l(r.get(),f(n),s);return p(i.origin,i.origin,e),i.plane[3]-=s,i}function xn(n,s,i){return Z(s,i),X(i,q(n,n.origin),i),i}function En(n,s){const i=n.basis1[0],e=n.basis2[1],[t,o]=n.origin;return bn(t-i,o-e,t+i,o+e,s)}function Z(n,s=P()){const i=(n[2]-n[0])/2,e=(n[3]-n[1])/2;return w(s.origin,n[0]+i,n[1]+e,0),w(s.basis1,i,0,0),w(s.basis2,0,e,0),wn(0,0,1,0,s.plane),s}function Y(n,s,i){return!!Mn(n.plane,s,i)&&en(n,i)}function Vn(n,s,i){if(Y(n,s,i))return i;const e=J(n,s,r.get());return p(i,s.origin,l(r.get(),s.direction,gn(s.origin,e)/I(s.direction))),i}function J(n,s,i){const e=T.get();tn(n,s,e,T.get());let t=Number.POSITIVE_INFINITY;for(const o of R){const a=z(n,o,S.get()),g=r.get();if($n(e,a,g)){const c=fn(r.get(),s.origin,g),b=Math.abs(ln(h(s.direction,c)));b<t&&(t=b,u(i,g))}}return t===Number.POSITIVE_INFINITY?Q(n,s,i):i}function _n(n,s){return(s-n)/s}function Q(n,s,i){if(Y(n,s,i))return i;const e=T.get(),t=T.get();tn(n,s,e,t);let o=Number.POSITIVE_INFINITY;for(const a of R){const g=z(n,a,S.get()),c=r.get();if(Tn(e,g,c)){const b=pn(s,c);if(!G(t,c))continue;b<o&&(o=b,u(i,c))}}return k(n,s.origin)<o&&nn(n,s.origin,i),i}function nn(n,s,i){const e=Pn(n.plane,s,r.get()),t=D(K(n,n.basis1),e,-1,1,r.get()),o=D(K(n,n.basis2),e,-1,1,r.get());return C(i,p(r.get(),t,o),n.origin),i}function sn(n,s,i){const{origin:e,basis1:t,basis2:o}=n,a=C(r.get(),s,e),g=N(t,a),c=N(o,a),b=N(f(n),a);return w(i,g,c,b)}function k(n,s){const i=sn(n,s,r.get()),{basis1:e,basis2:t}=n,o=I(e),a=I(t),g=Math.max(Math.abs(i[0])-o,0),c=Math.max(Math.abs(i[1])-a,0),b=i[2];return g*g+c*c+b*b}function On(n,s){return Math.sqrt(k(n,s))}function Fn(n,s){let i=Number.NEGATIVE_INFINITY;for(const e of R){const t=z(n,e,S.get()),o=dn(t,s);o>i&&(i=o)}return Math.sqrt(i)}function jn(n,s){return G(n.plane,s)&&en(n,s)}function Cn(n,s,i,e){return zn(n,i,e)}function q(n,s){const i=-n.plane[3];return N(f(n),s)-i}function Hn(n,s,i,e){const t=q(n,s),o=l(Un,f(n),i-t);return p(e,s,o),e}function Yn(n,s){return V(n.basis1,s.basis1)&&V(n.basis2,s.basis2)&&V(n.origin,s.origin)}function kn(n,s,i){return n!==i&&y(n,i),an(d,s),cn(d,d),m(i.basis1,n.basis1,d),m(i.basis2,n.basis2,d),m($(i.plane),$(n.plane),d),m(i.origin,n.origin,s),In(i.plane,i.plane,i.origin),i}function qn(n,s,i,e){return n!==e&&y(n,e),un(F,s,i),m(e.basis1,n.basis1,F),m(e.basis2,n.basis2,F),A(e),e}function f(n){return $(n.plane)}function zn(n,s,i){switch(s){case _.X:u(i,n.basis1),B(i,i);break;case _.Y:u(i,n.basis2),B(i,i);break;case _.Z:u(i,f(n))}return i}function en(n,s){const i=C(r.get(),s,n.origin),e=U(n.basis1),t=U(n.basis2),o=h(n.basis1,i),a=h(n.basis2,i);return-o-e<0&&o-e<0&&-a-t<0&&a-t<0}function K(n,s){const i=S.get();return u(i.origin,n.origin),u(i.vector,s),i}function z(n,s,i){const{basis1:e,basis2:t,origin:o}=n,a=l(r.get(),e,s.origin[0]),g=l(r.get(),t,s.origin[1]);p(i.origin,a,g),p(i.origin,i.origin,o);const c=l(r.get(),e,s.direction[0]),b=l(r.get(),t,s.direction[1]);return l(i.vector,p(c,c,b),2),i}function Rn(n,s){Math.abs(h(n.basis1,n.basis2)/(I(n.basis1)*I(n.basis2)))>1e-6&&O().warn(s,"Provided basis vectors are not perpendicular"),Math.abs(h(n.basis1,f(n)))>1e-6&&O().warn(s,"Basis vectors and plane normal are not perpendicular"),Math.abs(-h(f(n),n.origin)-n.plane[3])>1e-6&&O().warn(s,"Plane offset is not consistent with plane origin")}function tn(n,s,i,e){const t=f(n);j(t,s.direction,s.origin,i),j($(i),t,s.origin,e)}const on={plane:v(),origin:x(0,0,0),basis1:x(1,0,0),basis2:x(0,1,0)},T=new H(v),S=new H(mn),Un=M(),Bn=new H(()=>P()),R=[{origin:[-1,-1],direction:[1,0]},{origin:[1,-1],direction:[0,1]},{origin:[1,1],direction:[-1,0]},{origin:[-1,1],direction:[0,-1]}],d=W(),F=W(),Xn=Object.freeze(Object.defineProperty({__proto__:null,BoundedPlaneClass:yn,altitudeAt:q,axisAt:Cn,cameraFrustumCoverage:_n,closestPoint:Q,closestPointOnSilhouette:J,copy:y,copyWithoutVerify:Sn,create:P,distance:On,distance2:k,distanceToSilhouette:Fn,elevate:X,equals:Yn,extrusionContainsPoint:jn,fromAABoundingRect:Z,fromValues:L,getExtent:En,intersectRay:Y,intersectRayClosestSilhouette:Vn,normal:f,projectPoint:nn,projectPointLocal:sn,rotate:qn,setAltitudeAt:Hn,setExtent:xn,transform:kn,up:on,updateUnboundedPlane:A,wrap:An},Symbol.toStringTag,{value:"Module"}));export{L as J,A as K,P as W,y as Z,On as g,Xn as k,Z as t};
