import{bA as s,bB as n,ai as d,F as u,H as l}from"./index-DCoYlfh6.js";import{d as g}from"./FeatureLayerView2D-DsLp-SCk.js";import"./EffectView-DeJuVjQt.js";import"./featureConversionUtils-DN0d6qc6.js";import"./timeSupport-CCpdwJvO.js";import"./AttributeBinsFeatureSet-CP1IMseI.js";import"./AttributeBinsQuery-JHYrzRF8.js";import"./queryUtils-CbTJRNQ6.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-D7LaJuYK.js";import"./LayerView-CO-O0vy9.js";import"./Container-C7Wvw5qi.js";import"./TechniqueInstance-HoAErwlK.js";import"./UpdateTracking2D-EIjyi4GM.js";import"./Utils-6wjtOI46.js";import"./BoundingBox-DDC8CNgd.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-Dg0ANO-R.js";import"./VertexArrayObject-DbmKt-S6.js";import"./TileContainer-d3cc6kKu.js";import"./WGLContainer-DYBbQZhp.js";import"./ProgramTemplate-7hVnjBFP.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-BkVzimOb.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-Dors0DyS.js";import"./CIMSymbolHelper-ksM5hKtd.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-B7ZPeSEs.js";import"./GeometryUtils-CD4hL-Jm.js";import"./rasterizingUtils-BnuLddaJ.js";import"./floatRGBA-BlHyf9Nl.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-DTg8C-7n.js";import"./ShaderBuilder-BPB5aAJU.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BSnJFD_L.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-DbwtyVSa.js";import"./constants-B4mRqufT.js";import"./parquet-BfqUiE96.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-Bx3ikdxU.js";import"./RefreshableLayerView-CZmEtKL0.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
