import{bA as s,bB as n,a7 as d,ab as u,ad as l}from"./index-CNdw1GNh.js";import{d as g}from"./FeatureLayerView2D-BQ4_2qUp.js";import"./EffectView-Cv1JjZCS.js";import"./featureConversionUtils-BTENFT95.js";import"./timeSupport-CIaXd4cs.js";import"./AttributeBinsFeatureSet-C64oE1tZ.js";import"./AttributeBinsQuery-C2cM2SRV.js";import"./queryUtils-ByyICB5M.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-DkEMkHyz.js";import"./LayerView-BgVms6Gn.js";import"./Container-BW4Qwslr.js";import"./TechniqueInstance-Cl90_bJO.js";import"./UpdateTracking2D-Dcnv_45U.js";import"./Utils-DinuHA8K.js";import"./BoundingBox-765rZCMI.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-BpyJUFlz.js";import"./VertexArrayObject-CUs_Sv0X.js";import"./TileContainer-DdV-WLOc.js";import"./WGLContainer-BSvgSBlI.js";import"./ProgramTemplate-BMa77qRV.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-omb9zoNz.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-C9ZITkyM.js";import"./CIMSymbolHelper-DkgShMBC.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-B88ToYrN.js";import"./GeometryUtils-DpRAE6t6.js";import"./rasterizingUtils-Dwkwj6N7.js";import"./floatRGBA-C7dFxYV5.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-cOugTCJ4.js";import"./ShaderBuilder-DQB7r5fC.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CSluUC3c.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-BbtHIr0a.js";import"./constants-B4mRqufT.js";import"./parquet-B0wh95Vb.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-BQc4tUMI.js";import"./RefreshableLayerView-CAh5BuYo.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
