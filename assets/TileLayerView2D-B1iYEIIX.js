import{be as w,bf as y,bg as I,bh as T,bi as V,bj as H,b0 as u,bk as v,X as b,b9 as n,bl as f,b8 as C,K as q,ab as c,ac as d,ad as U}from"./index-CNdw1GNh.js";import"./floatRGBA-C7dFxYV5.js";import"./UpdateTracking2D-Dcnv_45U.js";import"./GeometryUtils-DpRAE6t6.js";import"./CIMSymbolHelper-DkgShMBC.js";import"./OverrideHelper-BrubJ6d8.js";import"./EffectView-Cv1JjZCS.js";import"./Container-BW4Qwslr.js";import"./WGLContainer-BSvgSBlI.js";import"./Utils-DinuHA8K.js";import"./StyleDefinition-omb9zoNz.js";import"./enums-BRzLM11V.js";import"./GridShader-BhZVjLdy.js";import"./TechniqueType-uMFRS8dR.js";import"./FramebufferObject-BpyJUFlz.js";import"./FeatureCommandQueue-C9ZITkyM.js";import"./PieChartMeshWriter-BpxGEidT.js";import"./renderState-Cw_Cd22Z.js";import"./glsl-BH37Aalp.js";import"./testSVGPremultipliedAlpha-CE_4wutD.js";import{A as S}from"./GraphicsView2D-Bbf9JOs2.js";import"./earcut-D9gy186-.js";import"./vec3f32-nZdmKIgz.js";import{r as Q,o as p,n as _}from"./imageUtils-CD05NTyL.js";import{S as $,y as G}from"./LayerView-BgVms6Gn.js";import{h as P}from"./HighlightGraphicContainer-CAyF0P6t.js";import{i as L}from"./RefreshableLayerView-CAh5BuYo.js";import{P as k,S as F}from"./MapServiceLayerViewHelper-CEt66CB2.js";import{r as z}from"./drapedUtils-Cbb56zt7.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-B88ToYrN.js";import"./rasterizingUtils-Dwkwj6N7.js";import"./Rect-CUzevAry.js";import"./BoundingBox-765rZCMI.js";import"./quantizationUtils-C-PfGVsx.js";import"./ProgramTemplate-BMa77qRV.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./VertexArrayObject-CUs_Sv0X.js";import"./config-BOD8--da.js";import"./featureConversionUtils-BTENFT95.js";import"./GraphShaderModule-cOugTCJ4.js";import"./ShaderBuilder-DQB7r5fC.js";import"./BindType-BBwFZqyN.js";import"./CircularArray-CujHzHWW.js";import"./AttributeStore-BcnqZR2e.js";import"./queryUtils-ByyICB5M.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BaxOSGun.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CSluUC3c.js";import"./TurboLine-B6yERKqF.js";import"./utils-DHTdt_5H.js";import"./basicInterfaces-CZwQPxTp.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-dSEj5Mhx.js";import"./dehydratedFeatures-BwRSM8MJ.js";import"./BitmapTechnique-DUxIyZeP.js";import"./TileContainer-DdV-WLOc.js";import"./AGraphicContainer-DLsUDG0N.js";import"./TechniqueInstance-Cl90_bJO.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./sublayerUtils-D9VRMAKI.js";import"./popupUtils-BQc4tUMI.js";const A=[0,0];let l=class extends L(Q($(G))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new w,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var i;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(i=this._highlightView)==null||i.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new y(this.layer.tileInfo,this.layer.fullExtent,i==null?void 0:i.effectiveMinLOD,i==null?void 0:i.effectiveMaxLOD),this._fetchQueue=new I({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,h)=>this.fetchTile(e,h),scheduler:this.scheduler,priority:T.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new V({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),k(this,this.layer)){const e=this._highlightView=new S({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new P(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new F({createFetchPopupFeaturesQueryGeometry:(h,s)=>z(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(h,s)=>{e.graphicUpdateHandler({graphic:h,property:s})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,i;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(i=this._highlightView)==null||i.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=H(t);if(e.length===0)return u();const h=(i==null?void 0:i.name)??v;return this._addHighlightGraphics(e,h),u(()=>!this.destroyed&&this._removeHighlightGraphics(e,h))}_processHighlight(){var i;const t=this._getHighlights();(i=this._highlightView)==null||i.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var i;return b((i=this.layer.tileInfo)==null?void 0:i.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(A,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:h=0}=i;try{return await this._fetchImage(t,e)}catch(s){if(n(s))throw s;if(!this.resampling)return p(this._tileInfoView.tileInfo.size);if(h<3){const r=this._tileInfoView.getTileParentId(t.id);if(r){const a=new f(r),o=await this._fetchTileWithoutTilemapCache(a,{...i,resamplingLevel:h+1});return _(this._tileInfoView,o,a,t)}}return p(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:h,resamplingLevel:s=0}=i,r=new f(0,0,0,0);let a,o=null;try{if(o=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,r,{signal:h}),!this.resampling&&r.level!==t.level)return await C(i),p(this._tileInfoView.tileInfo.size);a=await this._fetchImage(r,h)}catch(m){if(n(m))throw m;if(this.resampling&&o==="unknown"&&s<3){const g=this._tileInfoView.getTileParentId(t.id);if(g){r.set(g);try{a=await this._fetchTileWithTilemapCache(r,{...i,resamplingLevel:s+1})}catch{}}}}return a?this.resampling?_(this._tileInfoView,a,r,t):a:p(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){n(i)||q.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};c([d()],l.prototype,"resampling",null),c([d()],l.prototype,"tilemapCache",null),l=c([U("esri.views.2d.layers.TileLayerView2D")],l);const Kt=l;export{Kt as default};
