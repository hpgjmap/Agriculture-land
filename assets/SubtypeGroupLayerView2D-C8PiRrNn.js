import{bA as s,bB as n,ai as d,F as u,H as l}from"./index-BUPdcF-L.js";import{d as g}from"./FeatureLayerView2D-cSreby54.js";import"./EffectView-C8rAaHPu.js";import"./featureConversionUtils-BZrA2isK.js";import"./timeSupport-Cb7NWGhY.js";import"./AttributeBinsFeatureSet-B8UTBQTm.js";import"./AttributeBinsQuery-ClA_O8Ol.js";import"./queryUtils-Bs1Z_AoW.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-CniEhjMF.js";import"./LayerView-DqzHvh24.js";import"./Container-CQTnB3qb.js";import"./TechniqueInstance-DR_Hd_z5.js";import"./UpdateTracking2D-DaG8diQu.js";import"./Utils-DCfTgVbz.js";import"./BoundingBox-D7XE-3e7.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-DxsELhy-.js";import"./VertexArrayObject-BaqA6A4F.js";import"./TileContainer-BIl--Wyr.js";import"./WGLContainer-DTVptgmP.js";import"./ProgramTemplate-B5Rjph1m.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-fE_Q5F6o.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-BoTMRrCm.js";import"./CIMSymbolHelper-DsF-VUWg.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-BURokKPq.js";import"./GeometryUtils-BoTerXf1.js";import"./rasterizingUtils-D4o07JIF.js";import"./floatRGBA-pBqweAa_.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CE-OcXPS.js";import"./ShaderBuilder-DJjYb6MY.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-CDGK-5cn.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-CUebqj3o.js";import"./constants-B4mRqufT.js";import"./parquet-CPg4l2rm.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-B4SxOyyM.js";import"./RefreshableLayerView-HOrYFn60.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
