import{bb as p,e as m,F as s}from"./index-DjiYoRPg.js";import{p as n}from"./MeshVertexAttributes-DldJh_Yn.js";import{B as a}from"./vertexSpaceConversion-Dd182ro-.js";import"./meshProperties-C4iW0Ukm.js";import"./mat3f64-q3fE-ZOt.js";import"./mat4f64-Dk4dwAN8.js";import"./spatialReferenceEllipsoidUtils-DUTE2wTS.js";import"./computeTranslationToOriginAndRotation-Cw2KoAtP.js";import"./projectPointToVector-CZUixfNE.js";import"./meshVertexSpaceUtils-BH5sbAND.js";import"./MeshLocalVertexSpace-C_JqQexc.js";import"./vec3-CBRs3LbV.js";import"./BufferView-Cx_p9noa.js";import"./vec4-Crsm4yNo.js";async function F(t,o,r){await Promise.resolve(),p(r);const e=a(t,o,{useEllipsoid:r==null?void 0:r.useEllipsoid});if(!e)throw new m("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const i=t.cloneAndModifyVertexAttributes(new n({...e,uv:s(t.vertexAttributes.uv),color:s(t.vertexAttributes.color)}),o);return i.transform=null,i}export{F as convertMeshVertexSpace};
