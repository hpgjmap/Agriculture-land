import{aM as o,K as m,e as I,bW as f,mU as $}from"./index-DjiYoRPg.js";import{i as w}from"./BoundingBox-C6pzoQHH.js";import{t as P}from"./VertexElementDescriptor-BLyltQyJ.js";let d=class h{constructor(t,r,n,i,s,a,u){this.instanceId=t,this.textureKey=r,this.indexStart=n,this.indexCount=i,this.vertexStart=s,this.vertexCount=a,this.overlaps=u}updateBaseOffsets(t){this.vertexStart+=t.vertexFrom,this.indexStart+=t.indexFrom}clone(){return new h(this.instanceId,this.textureKey,this.indexStart,this.indexCount,this.vertexStart,this.vertexCount,this.overlaps)}static write(t,r,n,i,s,a,u,c){t.push(r),t.push(n),t.push(i),t.push(s),t.push(a),t.push(u),t.push(c)}serialize(t){return t.push(this.instanceId),t.push(this.textureKey),t.push(this.indexStart),t.push(this.indexCount),t.push(this.vertexStart),t.push(this.vertexCount),t.push(this.overlaps),t}static deserialize(t){const r=t.readInt32(),n=t.readInt32(),i=t.readInt32(),s=t.readInt32(),a=t.readInt32(),u=t.readInt32(),c=t.readInt32();return new h(r,n,i,s,a,u,c)}};d.byteSizeHint=7*Uint32Array.BYTES_PER_ELEMENT;function S(e,t){if(t!==null){e.push(t.length);for(const r of t)r.serialize(e);return e}e.push(0)}function _(e,t,r){const n=e.readInt32(),i=new Array(n);for(let s=0;s<i.length;s++)i[s]=t.deserialize(e,r);return i}let L=class y{constructor(t,r){this.id=t,this.sortKey=r,this.records=[]}serialize(t){return t.push(this.id),t.writeF32(this.sortKey),S(t,this.records),t}static deserialize(t){const r=t.readInt32(),n=t.readF32(),i=new y(r,n);return i.records=_(t,d)??[],i}};L.byteSizeHint=2*Uint32Array.BYTES_PER_ELEMENT+d.byteSizeHint;const U=new Float32Array(1),Y=new Uint32Array(U.buffer);function B(e){return U[0]=e,Y[0]}function z(e,t){return 65535&e|t<<16}function T(e){const t=B(e),r=t>>>31;let n=t>>>23&255,i=8388607&t;return n-=127,n>15?r<<15|31744:n<-25?0:(n<-14&&(i+=8388608,i/=2**(-14-n),n=-15),n+=15,i/=8192,i=R(i,1023),r<<15|n<<10|i)}function R(e,t){const r=Math.floor(e),n=e-r;return r<t&&(n>.5||n===.5&&r%2==1)?r+1:r}function p(e){let t=e>>>15,r=e>>10&31,n=1023&e;return t=t?-1:1,r-=15,n/=1024,r>-15?n+=1:r=-14,t*2**r*n}function H(e,t,r,n){const i=r.packPrecisionFactor??1;switch(r.type){case o.BYTE:if(r.count===1)e.setInt8(n+r.offset,t*i);else for(let s=0;s<r.count;s++){const a=s*Int8Array.BYTES_PER_ELEMENT;e.setInt8(n+r.offset+a,t[s]*i)}break;case o.UNSIGNED_BYTE:if(r.count===1)e.setUint8(n+r.offset,t*i);else for(let s=0;s<r.count;s++){const a=s*Uint8Array.BYTES_PER_ELEMENT;e.setUint8(n+r.offset+a,t[s]*i)}break;case o.SHORT:if(r.count===1)e.setInt16(n+r.offset,t*i,!0);else for(let s=0;s<r.count;s++){const a=s*Int16Array.BYTES_PER_ELEMENT;e.setInt16(n+r.offset+a,t[s]*i,!0)}break;case o.UNSIGNED_SHORT:if(r.count===1)e.setUint16(n+r.offset,t*i,!0);else for(let s=0;s<r.count;s++){const a=s*Uint16Array.BYTES_PER_ELEMENT;e.setUint16(n+r.offset+a,t[s]*i,!0)}break;case o.INT:if(r.count===1)e.setInt32(n+r.offset,t*i,!0);else for(let s=0;s<r.count;s++){const a=s*Int32Array.BYTES_PER_ELEMENT;e.setInt32(n+r.offset+a,t[s]*i,!0)}break;case o.UNSIGNED_INT:if(r.count===1)e.setUint32(n+r.offset,t*i,!0);else for(let s=0;s<r.count;s++){const a=s*Uint32Array.BYTES_PER_ELEMENT;e.setUint32(n+r.offset+a,t[s]*i,!0)}break;case o.FLOAT:if(r.count===1)e.setFloat32(n+r.offset,t*i,!0);else for(let s=0;s<r.count;s++){const a=s*Float32Array.BYTES_PER_ELEMENT;e.setFloat32(n+r.offset+a,t[s]*i,!0)}break;case o.HALF_FLOAT:if(r.count===1)e.setUint16(n+r.offset,T(t*i),!0);else for(let s=0;s<r.count;s++){const a=s*Uint16Array.BYTES_PER_ELEMENT;e.setUint16(n+r.offset+a,T(t[s]*i),!0)}}}function D(e,t,r){switch(t.type){case o.BYTE:{if(t.count===1)return e.getInt8(r+t.offset);const n=[];for(let i=0;i<t.count;i++){const s=i*Int8Array.BYTES_PER_ELEMENT;n.push(e.getInt8(r+t.offset+s))}return n}case o.UNSIGNED_BYTE:{if(t.count===1)return e.getUint8(r+t.offset);const n=[];for(let i=0;i<t.count;i++){const s=i*Uint8Array.BYTES_PER_ELEMENT;n.push(e.getUint8(r+t.offset+s))}return n}case o.SHORT:{if(t.count===1)return e.getInt16(r+t.offset,!0);const n=[];for(let i=0;i<t.count;i++){const s=i*Int16Array.BYTES_PER_ELEMENT;n.push(e.getInt16(r+t.offset+s,!0))}return n}case o.UNSIGNED_SHORT:{if(t.count===1)return e.getUint16(r+t.offset,!0);const n=[];for(let i=0;i<t.count;i++){const s=i*Uint16Array.BYTES_PER_ELEMENT;n.push(e.getUint16(r+t.offset+s,!0))}return n}case o.INT:{if(t.count===1)return e.getInt32(r+t.offset,!0);const n=[];for(let i=0;i<t.count;i++){const s=i*Int32Array.BYTES_PER_ELEMENT;n.push(e.getInt32(r+t.offset+s,!0))}return n}case o.UNSIGNED_INT:{if(t.count===1)return e.getUint32(r+t.offset,!0);const n=[];for(let i=0;i<t.count;i++){const s=i*Uint32Array.BYTES_PER_ELEMENT;n.push(e.getUint32(r+t.offset+s,!0))}return n}case o.FLOAT:{if(t.count===1)return e.getFloat32(r+t.offset,!0);const n=[];for(let i=0;i<t.count;i++){const s=i*Float32Array.BYTES_PER_ELEMENT;n.push(e.getFloat32(r+t.offset+s,!0))}return n}case o.HALF_FLOAT:{if(t.count===1)return p(e.getUint16(r+t.offset,!0));const n=[];for(let i=0;i<t.count;i++){const s=i*Uint16Array.BYTES_PER_ELEMENT;n.push(p(e.getUint16(r+t.offset+s,!0)))}return n}}}class F{constructor(t,r,n,i,s,a,u,c,l=[]){this.entityTexel=t,this.anchorX=r,this.anchorY=n,this.directionX=i,this.directionY=s,this.maxScale=a,this.minScale=u,this.referenceBounds=c,this.bounds=l}serialize(t){t.push(this.entityTexel),t.writeF32(this.anchorX),t.writeF32(this.anchorY),t.writeF32(this.directionX),t.writeF32(this.directionY),t.writeF32(this.maxScale),t.writeF32(this.minScale),this.referenceBounds===null?(t.writeF32(0),t.writeF32(0),t.writeF32(0)):(t.writeF32(this.referenceBounds.size),t.writeF32(this.referenceBounds.offsetX),t.writeF32(this.referenceBounds.offsetY)),S(t,this.bounds)}static deserialize(t){const r=t.readInt32(),n=t.readF32(),i=t.readF32(),s=t.readF32(),a=t.readF32(),u=t.readF32(),c=t.readF32(),l=t.readF32(),N=t.readF32(),A=t.readF32(),g=_(t,w)??[];return new F(r,n,i,s,a,u,c,{size:l,offsetX:N,offsetY:A},g)}}const M=()=>m.getLogger("esri.views.2d.engine.webgl.Utils");function G(e){switch(e){case f.UNSIGNED_BYTE:return 1;case f.UNSIGNED_SHORT_4_4_4_4:return 2;case f.FLOAT:return 4;default:return void M().error(new I("webgl-utils",`Unable to handle type ${e}`))}}function X(e){switch(e){case f.UNSIGNED_BYTE:return Uint8Array;case f.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case f.FLOAT:return Float32Array;default:return void M().error(new I("webgl-utils",`Unable to handle type ${e}`))}}function x(e){const t=new Map;for(const r in e){const n=e[r];let i=0;t.set(r,n.map(s=>{const a=new P(s.name,s.count,s.type,i,0,s.normalized||!1);return i+=s.count*$(s.type),a})),t.get(r).forEach(s=>s.stride=i)}return t}const b=e=>{const t=new Map;for(const r in e)for(const n of e[r])t.set(n.name,n.location);return t},O=e=>{const t={};return e.forEach((r,n)=>t[n]=r!=null&&r.length?r[0].stride:0),t},E=new Map,K=(e,t)=>{if(!E.has(e)){const r=x(t),n={strides:O(r),bufferLayouts:r,attributes:b(t)};E.set(e,n)}return E.get(e)},V=e=>e.includes("data:image/svg+xml");function J(e){const t=[];for(let r=0;r<e.length;r++)t.push(e.charCodeAt(r));return t}function W(e){if(e==null)return"";const{type:t}=e;switch(t){case"CIMMarkerPlacementAlongLineRandomSize":return`${t}-${e.seed}-${e.randomization}`;case"CIMMarkerPlacementAlongLineVariableSize":return`${t}-${e.maxRandomOffset}-${e.numberOfSizes}-${e.seed}-${e.variationMethod}`;case"CIMMarkerPlacementAtExtremities":return`${t}-${e.extremityPlacement}-${e.offsetAlongLine}`;case"CIMMarkerPlacementAtRatioPositions":return`${t}-${e.beginPosition}-${e.endPosition}-${e.flipFirst}-${JSON.stringify(e.positionArray)}`;case"CIMMarkerPlacementAtMeasuredUnits":return`${t}-${e.interval}-${e.skipMarkerRate}-${e.placeAtExtremities}`;case"CIMMarkerPlacementInsidePolygon":return`${t}-${e.stepX}-${e.stepY}-${e.randomness}-${e.gridType}-${e.seed}-${e.shiftOddRows}`;case"CIMMarkerPlacementOnLine":return`${t}-${e.relativeTo}-${e.startPointOffset}`;case"CIMMarkerPlacementOnVertices":return`${t}-${e.placeOnControlPoints}-${e.placeOnEndPoints}-${e.placeOnRegularVertices}`;case"CIMMarkerPlacementPolygonCenter":return`${t}-${e.method}`;default:return`${t}`}}export{K as $,z as a,H as b,D as c,J as d,V as f,X as i,_ as n,G as o,W as p,F as r,L as s,d as t};
