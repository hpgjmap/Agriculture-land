import{ds as F,ga as H,g6 as J,gb as O,g2 as v,gc as w,ge as D,gT as K,gf as Z,x0 as ee,k4 as k,g1 as y,x1 as X,k9 as G,x2 as te,gw as ne,h1 as re,jY as R,jW as U,w$ as V}from"./index-CQBquChn.js";import{u as se}from"./Centroid-DZi-eb9F-DpbR6Jpj.js";import{m as A}from"./OperatorProximity-XnqfwPmP.js";class oe{getOperatorType(){return 10203}accelerateGeometry(e,o,s){return!1}canAccelerateGeometry(e){return!1}supportsCurves(){return!0}executeMany(e,o){return new I(e,o)}execute(e,o){return new I(null,o).labelPoint(e)}}class I extends H{progress_(){}tock(){return!0}getRank(){return 1}constructor(e,o){super(),this.m_index=-1,this.m_progressCounter=0,this.m_progressTracker=o,this.m_inputGeoms=e}next(){const e=this.m_inputGeoms.next();return e?(J(e),this.m_index=this.m_inputGeoms.getGeometryID(),this.labelPoint(e)):null}getGeometryID(){return this.m_index}labelPoint(e){if(e===null&&O("null pointer is not allowed"),e.getGeometryType()===v.enumPoint)return e;if(e.isEmpty())return new w({vd:e.getDescription()});switch(e.getGeometryType()){case v.enumPolygon:return this.labelPointPolygon(e);case v.enumPolyline:return this.labelPointPolyline(e);case v.enumMultiPoint:return this.labelPointMultiPoint(e);case v.enumEnvelope:return this.labelPointEnvelope(e);default:O("geometry is not supported")}}labelPointPolygon(e){const o=new D;e.queryEnvelope(o);const s=K(null,o,!0).total();let l=null,r=e;if(e.hasNonLinearSegments()){const t=new Z({copy:e}),m=ee(t,.25*s,s);k(m!==e),l=m,r=l}let u=0,d=0;for(let t=0,m=r.getPathCount();t<m;++t){const M=Math.abs(r.calculateRingArea2D(t));M>d&&(d=M,u=t)}const a=new y;if(Math.abs(d)<=2*s*s?a.setNAN():a.assign(se(r,u)),Number.isNaN(a.x)){const t=new D;return r.queryPathEnvelope(u,t),new w({pt:t.getCenter()})}if(r.getPointCount()<4)return new w({x:a.x,y:a.y});const b=y.getNAN(),n=[b.clone(),b.clone(),b.clone(),b.clone()],g=[Number.NaN,Number.NaN,Number.NaN,Number.NaN],f=[Number.NaN,Number.NaN,Number.NaN,Number.NaN];let E=!1,x=new A().getNearestCoordinate(r,a,!0,!1);if(x.m_distance===0&&(E=!0,n[0]=a,x=new A().getNearestCoordinate(r,a,!1,!1),x.m_distance>.25*o.minDimension()*1.66666666))return new w({x:a.x,y:a.y});g[0]=x.m_distance,f[0]=0;const P=new y;let c=!1,i=.25,N=-1;const _=new D;r.queryPathEnvelope(u,_);do{let t=Number.NaN;if(n[1]=this.calculateParacentroid_(r,X(_.xmin,_.xmax,i),s),n[1].isNAN()||(x=new A().getNearestCoordinate(r,n[1],!1,!1),t=x.m_distance),t>s&&G(r,n[1],s)===1)c=!0,g[1]=t,f[1]=y.sqrDistance(n[1],a);else if(t>N&&(N=t,P.setCoordsPoint2D(n[1])),i-=.01,i<.1){if(!(N>=0))break;c=!0,g[1]=N,n[1]=P,f[1]=y.sqrDistance(n[1],a)}}while(!c);c=!1,i=.5,N=-1;let L=.01,j=1;do{let t=Number.NaN;if(n[2]=this.calculateParacentroid_(r,X(_.xmin,_.xmax,i),s),n[2].isNAN()||(x=new A().getNearestCoordinate(r,n[2],!1,!1),t=x.m_distance),t>s&&G(r,n[2],s)===1)c=!0,g[2]=t,f[2]=y.sqrDistance(n[2],a);else if(t>N&&(N=t,P.setCoordsPoint2D(n[2])),i=.5+L*j,L+=.01,j*=-1,i<.3||i>.7){if(!(N>=0))break;c=!0,g[2]=N,n[2]=P,f[2]=y.sqrDistance(n[2],a)}}while(!c);c=!1,i=.75,N=-1;do{let t=Number.NaN;if(n[3]=this.calculateParacentroid_(r,X(_.xmin,_.xmax,i),s),n[3].isNAN()||(x=new A().getNearestCoordinate(r,n[3],!1,!1),t=x.m_distance),t>s&&G(r,n[3],s)===1)c=!0,g[3]=t,f[3]=y.sqrDistance(n[3],a);else if(t>N&&(N=t,P.setCoordsPoint2D(n[3])),i+=.01,i>.9){if(!(N>=0))break;c=!0,g[3]=N,n[3]=P,f[3]=y.sqrDistance(n[3],a)}}while(!c);const h=[0,1,2,3],S=E?0:1;for(let t=S;t<4;t++)for(let m=S;m<3;m++){const M=f[m],$=f[m+1];if(te(M,$)>0){const B=h[m];h[m]=h[m+1],h[m+1]=B,f[m]=$,f[m+1]=M}}let q=S,Y=0,C=0;for(let t=S;t<4;t++){switch(t){case 0:C=2*g[h[t]];break;case 1:C=1.66666666*g[h[t]];break;case 2:C=1.33333333*g[h[t]];break;case 3:C=g[h[t]]}C>Y&&(Y=C,q=h[t])}return k(!n[q].isNAN()),new w({x:n[q].x,y:n[q].y})}labelPointPolyline(e){const o=new y;if(e.getPointCount()>2*e.getPathCount()){let s=-1,l=-Number.MAX_VALUE;for(let a=0,b=e.getPathCount();a<b;a++)if(e.getPathSize(a)>2){const n=e.calculatePathLength2D(a);n>l&&(l=n,s=a)}const r=e.getPathStart(s),u=e.getPathEnd(s),d=Math.trunc((r+u)/2);o.assign(e.getXY(d))}else{let s=-Number.MAX_VALUE;const l=e.querySegmentIterator();for(;l.nextPath();)if(l.hasNextSegment()){const r=l.nextSegment(),u=r.calculateLength2D();u>s&&(s=u,o.assign(r.getCoord2D(r.lengthToT(.5*u))))}}return new w({x:o.x,y:o.y})}labelPointMultiPoint(e){const o=new D;e.queryEnvelope(o);const s=o.getCenter(),l=new A().getNearestCoordinate(e,s,!1,!1).m_coordinate;return new w({x:l.x,y:l.y})}labelPointEnvelope(e){const o=e.getCenterXY();return new w({x:o.x,y:o.y})}calculateParacentroid_(e,o,s){const l=new D;e.queryEnvelope(l);const r=new y(o,0);let u=Number.MAX_VALUE,d=Number.MAX_VALUE,a=!1,b=!1;const n=new ne;n.setStartXYCoords(r.x,l.ymin-1),n.setEndXYCoords(r.x,l.ymax+1);const g=new D,f=new y,E=new y,x=re(y,2),P=e.querySegmentIterator();for(;P.nextPath();)for(;P.hasNextSegment();){const c=P.nextSegment();if(c.queryEnvelope(g),k(c.isMonotoneQuickAndDirty()),f.setCoordsPoint2D(n.getStartXY()),E.setCoordsPoint2D(n.getEndXY()),g.clipLine(f,E)===0||n.intersect(c,x,null,null,s)!==1)continue;const i=x[0].y;u>d?i<u&&(u=i,a=!0):i<d&&(d=i,b=!0)}return a&&b?r.y=(u+d)/2:r.setNAN(),r}}const T=new oe;function ae(p){return T.execute(p,null)}function ie(p){const e=T.executeMany(new F(p),null);return Array.from(e)}function le(){return T.supportsCurves()}function z(p){return V(ae(R(p)),U(p))}function Q(p){const e=p.map(R),o=U(p);return ie(e).map(s=>V(s,o))}const W=le(),ge=Object.freeze(Object.defineProperty({__proto__:null,execute:z,executeMany:Q,supportsCurves:W},Symbol.toStringTag,{value:"Module"})),fe=Object.freeze(Object.defineProperty({__proto__:null,execute:z,executeMany:Q,supportsCurves:W},Symbol.toStringTag,{value:"Module"}));export{ge as c,fe as l};
