import{bA as s,bB as n,a7 as d,ab as u,ad as l}from"./index-_f-whK0a.js";import{d as g}from"./FeatureLayerView2D-U3FRjk18.js";import"./EffectView-BBSAcIxC.js";import"./featureConversionUtils-8fEhqDB2.js";import"./timeSupport-DoYO16YZ.js";import"./AttributeBinsFeatureSet-DngzdvFZ.js";import"./AttributeBinsQuery-Bln4wazU.js";import"./queryUtils-BKXVlwKk.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-ClefoOLc.js";import"./LayerView-Bbv89OXj.js";import"./Container-CAcVxKWv.js";import"./TechniqueInstance-BuVQoz_-.js";import"./UpdateTracking2D-DcoOByGZ.js";import"./Utils-Bj900mX5.js";import"./BoundingBox-D99KZsRE.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-BG4YH9XT.js";import"./VertexArrayObject-D3ADUOXc.js";import"./TileContainer-D_lye3WM.js";import"./WGLContainer-BVLgWvIy.js";import"./ProgramTemplate-CXu0C7Ca.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-CvSUesfL.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-D91kRlIQ.js";import"./CIMSymbolHelper-D0azC1Xv.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CPXjpyUj.js";import"./GeometryUtils-Bu0SRbc-.js";import"./rasterizingUtils-DBlp1O3k.js";import"./floatRGBA-BL0HvWJm.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-Co2s8tKP.js";import"./ShaderBuilder-ClERnbUi.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-C9Lb6C3U.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-BOt8F4mz.js";import"./constants-B4mRqufT.js";import"./parquet-GMq4IO3a.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-D6BhtZut.js";import"./RefreshableLayerView-CaFX80n6.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
