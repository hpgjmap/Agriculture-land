import{db as K,ar as P,n2 as D,n3 as he,mr as ce,jm as B,n4 as L,iI as ue,n5 as le,cN as j,n6 as de,b1 as me,n7 as pe,n8 as ge,kX as fe,ae as ee,ai as M,j3 as ye,b3 as $,m2 as _e,n9 as be,a_ as Ie,na as we,cp as F,nb as Se,nc as ve,nd as Me,eM as xe,ah as Re,d2 as $e,bA as Te,bI as Pe,g_ as Ge,ne as Ce,bh as De,nf as je,ng as Ue,nh as ke,at as ze,as as Ae,aA as Fe,F as S,G as v,H as Oe}from"./index-BUPdcF-L.js";import{m as te,f as Be,i as q,e as X,$ as Le,a as qe}from"./CIMSymbolHelper-DsF-VUWg.js";import{y as Ee}from"./OverrideHelper-BmqY-y_c.js";import{b as Ve}from"./WGLContainer-DTVptgmP.js";import{M as He,p as Ze,x as We,n as Ne,s as Xe,a as Qe}from"./AttributeStore-C8zlkJz_.js";import{n as Ye,M as Je,h as Ke,P as et,g as tt,y as st,S as rt,V as it,u as nt,p as at,z as E,a as ot,b as ht}from"./FeatureCommandQueue-BoTMRrCm.js";import{s as ct,m as ut,d as V}from"./featureConversionUtils-BZrA2isK.js";import{e as lt}from"./mat3f64-q3fE-ZOt.js";import{a as dt}from"./normalizeUtilsSync-IHUN3Bzh.js";import{F as mt,e as pt,n as gt,i as ft,r as yt}from"./dehydratedFeatures-DJHPiw7F.js";import{x as _t,j as bt}from"./queryUtils-Bs1Z_AoW.js";import{d as It}from"./UpdateTracking2D-DaG8diQu.js";async function wt(t,e,s){const r=[],i={scaleInfo:Ye(t),scaleExpression:null};for(const n of e)switch(n.type){case"marker":if(n.animationParams){r.push(...nt(s.instances.animatedMarker,n,E,i));break}r.push(...at(s.instances.marker,n,E,i));break;case"fill":n.spriteRasterizationParam==null?r.push(...rt(s.instances.fill,n,i)):r.push(...it(s.instances.complexFill,n,!1,i));break;case"line":n.spriteRasterizationParam?r.push(...tt(s.instances.texturedLine,n,!1,i)):r.push(...st(s.instances.line,n,!1,i));break;case"text":r.push(...et(s.instances.text,n,E,i));break;case"gradientFill":r.push(...Ke(s.instances.gradientFill,n,i));break;case"gradientStroke":r.push(...Je(s.instances.gradientStroke,n,i))}return r}let St=class Z extends He{static from(e,s,r){return new Z(e,s,r)}constructor(e,s,r){super(r),this._items=e,this._tile=s,this._index=-1,this._cachedGeometry=null;const i=s.lod;i.wrap&&(this._wrappingInfo={worldSizeX:i.worldSize[0]})}get _current(){return this._items[this._index]}getItem(){return this._current}getZOrder(){return this._current.zOrder}getMeshWriters(){var e;return((e=this._current.symbolResource)==null?void 0:e.symbolInfo.meshWriters)??[]}hasField(e){return this._current.attributes[e]!=null}field(e){return this.readAttribute(e)}get geometryType(){const e=K(this._current.geometry);return e==="esriGeometryPoint"?"esriGeometryMultipoint":e}getCursor(){return this.copy()}copy(){const e=new Z(this._items,this._tile,this.metadata);return this.copyInto(e),e}copyInto(e){super.copyInto(e),e._cachedGeometry=this._cachedGeometry,e._index=this._index}get fields(){throw new Error("Fields reading not supported to graphics.")}get hasFeatures(){return!!this._items.length}get hasNext(){return this._index+1<this._items.length}get exceededTransferLimit(){throw new Error("InternalError: exceededTransferLimit not implemented for graphics.")}get hasZ(){return!1}get hasM(){return!1}get usedMemory(){return this._current.usedMemory}getInTransform(){return this._tile.transform}getSize(){return this._items.length}getAttributeHash(){let e="";for(const s in this._current.attributes)e+=this._current.attributes[s];return e}getObjectId(){return this._items[this._index].objectId}getDisplayId(){return this._current.displayId}setDisplayId(e){throw new Error("InternalError: Setting displayId not supported for graphics.")}setIndex(e){this._index=e}getIndex(){return this._index}next(){for(this._cachedGeometry=null;++this._index<this._items.length&&!this._getExists(););return this._index<this._items.length}readGeometryArea(){throw new Error("InternalError: readGeometryArea not supported for graphics.")}_readGeometry(){if(!this._cachedGeometry){let e=ct(this._current.projectedGeometry,this.hasZ,this.hasM);if(this.geometryType==="esriGeometryPolyline"&&(e=ut(new P,e,this.hasZ,this.hasM,this.geometryType,this._tile.transform.scale[0])),this._cachedGeometry=V(new P,e,this.hasZ,this.hasM,this.geometryType,this._tile.transform),!this._cachedGeometry)return null;this._wrapGeometry(this._cachedGeometry)}return this._cachedGeometry}_wrapGeometry(e){if(!this._wrappingInfo)return;const{worldSizeX:s}=this._wrappingInfo;if(e.isPoint)return s===1?(e.coords.push(D,0),e.coords.push(-1024,0),void e.lengths.push(3)):s===2?(e.coords.push(2*D,0),e.coords.push(-2048,0),void e.lengths.push(3)):void this._wrapVertex(e.coords,0,2,s);if(this.geometryType==="esriGeometryMultipoint"){if(s===1){const r=e.coords.slice();r[0]-=512;const i=e.coords.slice();i[0]+=512,e.coords.push(...r,...i);const n=e.lengths[0];return void e.lengths.push(n,n)}this._wrapVertex(e.coords,0,2,s)}}_wrapVertex(e,s,r,i){const n=s*r,a=e[n];a<-512*(i-2)?e[n]=a+D*i:a>D*(i-1)&&(e[n]=a-D*i)}_readX(){const e=this._readGeometry();return e!=null?e.coords[0]:0}_readY(){const e=this._readGeometry();return e!=null?e.coords[1]:0}_readServerCentroid(){switch(this.geometryType){case"esriGeometryPolygon":{const e=ce(this._current.projectedGeometry),s=new P([],e);return V(new P,s,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}case"esriGeometryPolyline":{const e=this._current.projectedGeometry,s=he(e.paths,this.hasZ),r=new P([],s);return V(new P,r,this.hasZ,this.hasM,this.geometryType,this._tile.transform)}}return null}_readAttribute(e,s){const r=this._current.attributes[e];if(r!==void 0)return r;const i=e.toLowerCase();for(const n in this._current.attributes)if(n.toLowerCase()===i)return this._current.attributes[n]}_readAttributes(){return this._current.attributes}};function W(t){var e,s;return"curveRings"in t&&!!((e=t.curveRings)!=null&&e.length)||"curvePaths"in t&&!!((s=t.curvePaths)!=null&&s.length)}function vt(t){return"curveRings"in t?t.curveRings:t.curvePaths}function se(t){return"b"in t}function re(t){return"c"in t}function Mt(t){return Array.isArray(t)}function ie(t){return"a"in t}function xt(t){return t.a.length===4}function Rt(t){return se(t)?t.b[0]:re(t)?t.c[0]:ie(t)?t.a[0]:t}const H={maxSegmentLength:1/0,maxSegmentsPerCurve:12e3,minSegmentsPerCurve:1},O=1e-6,G=lt();function U(t,e){return ue(t,e)}function T(t,e){const s=Math.atan2(t,e);return s<0?s+2*Math.PI:s}function ne(t,e,s,{maxSegmentLength:r,maxSegmentsPerCurve:i,minSegmentsPerCurve:n},a){const o=r*r,u=1/i,c=a(0),h=a(1);U(e,c)>O&&t.push(c);const l=[1],d=[h],m=1/n;for(let g=n-1;g>0;g--){const y=g*m;l.push(y),d.push(a(y))}let p=0,f=c;for(;l.length>0;){const g=l.pop(),y=d.pop();if(U(f,y)<o||p===g||g-p<u)t.push(y),p=g,f=y;else{l.push(g),d.push(y);const _=(p+g)/2;l.push(_),d.push(a(_))}}return U(s,h)>O&&t.push([...s]),t}function $t(t,e,s,r,i){const n=1-i,a=n*n,o=i*i,u=a*n,c=3*i*a,h=3*o*n,l=o*i;return[t[0]*u+e[0]*c+s[0]*h+r[0]*l,t[1]*u+e[1]*c+s[1]*h+r[1]*l]}function Tt(t,e,s,r){const[i,n,a]=s.b;return ne(t,e,i,r,o=>$t(e,n,a,i,o))}function Pt(t,e,s,r){const[i,n]=e,[a,o]=s,[u,c]=r,h=i*i+n*n,l=a*a+o*o,d=u*u+c*c;B(G,i,a,u,n,o,c,1,1,1);const m=L(G);if(m===0)return null;B(G,h,l,d,n,o,c,1,1,1);const p=L(G);B(G,h,l,d,i,a,u,1,1,1);const f=p/m*.5,g=L(G)/m*-.5;return t[0]=f,t[1]=g,t}function ae(t,e,s,r,i,n,a,o,{maxSegmentLength:u,maxSegmentsPerCurve:c,minSegmentsPerCurve:h}){const l=2*n,d=[r+n*Math.cos(a),i+n*Math.sin(a)],m=[r+n*Math.cos(o),i+n*Math.sin(o)];U(e,d)>O&&t.push(d);const p=o-a,f=u<l?2*Math.asin(u/l):p,g=Math.min(c,Math.max(h,Math.ceil(Math.abs(p/f)))),y=1/g;for(let _=1;_<g;_++){const I=_*y,b=a*(1-I)+o*I;t.push([r+n*Math.cos(b),i+n*Math.sin(b)])}return t.push(m),U(s,m)>O&&t.push([...s]),t}function Gt(t,e,s,r){const[i,n]=s.c,a=Pt([],e,n,i);if(a==null)return t.push([...i]),t;const[o,u]=e,[c,h]=n,[l,d]=i,[m,p]=a,f=o-m,g=u-p,y=Math.sqrt(f*f+g*g),_=T(u-p,o-m),I=T(h-p,c-m);let b=T(d-p,l-m);return(I-_)*(b-I)<0&&(b+=2*Math.sign(_-b)*Math.PI),ae(t,e,i,m,p,y,_,b,r)}function oe(t,e,s){const[r,i,n,a]=s.a,o=Math.abs(t-e),u=o>Math.PI,c=o<Math.PI,h=le(o,Math.PI);return(!h&&(u&&n||c&&!n)||h&&(t>e&&a||t<e&&!a))&&(t+=2*(Math.sign(e-t)||1)*Math.PI),t}function Ct(t,e,s,r){const[i,n]=s.a,[a,o]=e,[u,c]=i,[h,l]=n,d=a-h,m=o-l,p=Math.sqrt(d*d+m*m),f=T(o-l,a-h);return ae(t,e,i,h,l,p,f,oe(T(c-l,u-h),f,s),r)}function Dt(t,e,s,r){const[i,n,a,o,u,c,h]=s.a,[l,d]=e,[m,p]=i,[f,g]=n,y=c*h,_=Math.cos(u),I=Math.sin(u),b=T(1/y*(d-g)*_-1/y*(l-f)*I,1/c*(d-g)*I+1/c*(l-f)*_),C=oe(T(1/y*(p-g)*_-1/y*(m-f)*I,1/c*(p-g)*I+1/c*(m-f)*_),b,s);return ne(t,e,i,r,R=>{const k=b*(1-R)+C*R,z=Math.cos(k),A=Math.sin(k);return[c*z*_-y*A*I+f,c*z*I+y*A*_+g]})}function jt(t,e,s,r){return se(s)?Tt(t,e,s,r):re(s)?Gt(t,e,s,r):ie(s)?xt(s)?Ct(t,e,s,r):Dt(t,e,s,r):(Mt(s)&&t.push([...s]),t)}function Q(t,e){if(!W(t))return t;const s=vt(t),r=[];for(const i of s){const n=[];for(let a=0,o=1;o<i.length;a=o++){const u=Rt(i[a]);a===0&&n.push(u),jt(n,u,i[o],{maxSegmentLength:e.maxSegmentLength??H.maxSegmentLength,maxSegmentsPerCurve:e.maxSegmentsPerCurve??H.maxSegmentsPerCurve,minSegmentsPerCurve:Math.max(e.minSegmentsPerCurve??H.minSegmentsPerCurve,1)})}r.push(n)}return"curvePaths"in t?{paths:r,spatialReference:t.spatialReference}:{rings:r,spatialReference:t.spatialReference}}class N{static fromGraphic(e,s,r,i){return new N(e.geometry,s,e.attributes,e.visible,e.uid,e.version,r,i)}constructor(e,s,r,i,n,a,o,u){this.geometry=e,this.symbol=s,this.attributes=r,this.visible=i,this.objectId=n,this._version=a,this.zOrder=o,this.displayId=u,this.symbolBounds=j(),this.prevSymbolBounds=j(),this.size=[0,0,0,0],this.geometryBounds=j(),this._isDensificationDirty=!1,this._densificationSegmentLength=1/0}get projectedGeometry(){return this._projectedGeometry}get linearCIM(){var e;return(e=this.symbolResource)==null?void 0:e.symbolInfo.linearCIM}get usedMemory(){return 128+de(this.attributes)+mt(this.geometry)}get hasAnimations(){const{linearCIM:e}=this;return!!e&&e.some(s=>"animationParams"in s&&!!s.animationParams)}get hasCurvedGeoemtry(){return this.geometry!=null&&this.geometry.type!=="mesh"&&W(this.geometry)}update(e,s,r){return(this._version!==e.version||this.zOrder!==r||this.symbol!==s)&&(this.prevSymbolBounds=this.symbolBounds,this.symbolBounds=j(),this.zOrder=r,this.geometry=e.geometry,this.attributes=e.attributes,this.symbol=s,this.visible=e.visible,this._version=e.version,this.symbolResource=null,this._projectedGeometry=null,j(this.geometryBounds),this._minDensificationSegmentLength=null,!0)}updateDensificationResolution(e){if(!this.hasCurvedGeoemtry)return!1;const s=Math.max(Ut(e),this._minDensificationSegmentLength??0);return s!==this._densificationSegmentLength&&(this._densificationSegmentLength=s,this._isDensificationDirty=!0,!0)}async projectAndNormalize(e){let s,r=this.geometry;if(r&&r.spatialReference&&r.type!=="mesh"&&(r.type==="extent"&&(r=te(r)),s=W(r)?Q(r,{maxSegmentLength:1/0,minSegmentsPerCurve:pt()}):r.toJSON(),this._projectedGeometry=await Y(s,r.spatialReference,e),me(this.geometryBounds,this._projectedGeometry),this.hasCurvedGeoemtry&&this._projectedGeometry!=null)){const i=pe(this.geometryBounds),n=ge(this.geometryBounds);(i||n)&&(this._minDensificationSegmentLength=Math.max(i,n)/gt())}}async densifyCurvedGeometryForDisplay(e){if(!this.hasCurvedGeoemtry||!this._isDensificationDirty)return;this._isDensificationDirty=!1;const s=this.geometry;if(!s||!s.spatialReference||s.type==="mesh")return;const r=e.metersPerUnit/s.spatialReference.metersPerUnit,i=this._densificationSegmentLength*r,n=Q(s,{maxSegmentLength:i,minSegmentsPerCurve:ft()});this._projectedGeometry=await Y(n,s.spatialReference,e)}}async function Y(t,e,s){await _t(t.spatialReference,s);const r=dt(t);if(!r)return;const i=bt(r,e,s);return i&&fe(i),ee(i)?te(i):i}function Ut(t){return 2**Math.round(Math.log2(t))*yt()}class kt{constructor(e,s,r){this.added=e,this.updated=s,this.removed=r}hasAnyUpdate(){return!!(this.added.length||this.updated.length||this.removed.length)}}const J=1e-5;function zt(t,e){return e.zOrder-t.zOrder}class At{constructor(e,s,r,i,n){this._items=new Map,this._boundsDirty=!1,this._outSpatialReference=e,this._cimResourceManager=s,this._hittestDrawHelper=new Be(s),this._tileInfoView=r,this._store=n;const a=r.getClosestInfoForScale(i);this._resolution=this._tileInfoView.getTileResolution(a.level)}destroy(){this._hittestDrawHelper.destroy()}items(){return this._items.values()}getItem(e){return this._items.get(e)}async update(e,s,r){const i=[],n=[],a=[],o=new Set,u=[];let c=0;for(const h of e.items){c++;const l=h.uid,d=this._items.get(l),m=s(h);if(o.add(l),d){const g=d.update(h,m,c),y=d.updateDensificationResolution(this._resolution);g&&u.push(this._updateItem(d,r)),(g||y)&&n.push(d);continue}const p=this._store.createDisplayIdForObjectId(l),f=N.fromGraphic(h,m,c,p);f.updateDensificationResolution(this._resolution),u.push(this._updateItem(f,r)),this._items.set(f.objectId,f),i.push(f)}for(const[h,l]of this._items.entries())o.has(h)||(this._store.releaseDisplayIdForObjectId(h),this._items.delete(h),a.push(l));return await Promise.all(u),this._index=null,new kt(i,n,a)}updateLevel(e){if(this._resolution===e)return!1;this._index=null,this._boundsDirty=!0,this._resolution=e;for(const s of this.items())if(s.hasCurvedGeoemtry)return!0;return!1}hitTest(e,s,r,i,n){const a=M("esri-mobile"),o=a?ve:Me,u=o+(a?0:Se);e=ye(e,this._tileInfoView.spatialReference);const c=i*window.devicePixelRatio*u,h=$();h[0]=e-c,h[1]=s-c,h[2]=e+c,h[3]=s+c;const l=i*window.devicePixelRatio*o,d=$();d[0]=e-l,d[1]=s-l,d[2]=e+l,d[3]=s+l;const m=.5*i*(u+q),p=this._searchIndex(e-m,s-m,e+m,s+m);if(!p||p.length===0)return[];const f=[],g=$(),y=$();for(const b of p){if(!b.visible)continue;const{geometryBounds:C,symbolResource:R}=b;this._getSymbolBounds(g,R,C,y,n),y[3]=y[2]=y[1]=y[0]=0,_e(g,h)&&f.push(b)}if(f.length===0)return[];const _=this._hittestDrawHelper,I=[];for(const b of f){const{projectedGeometry:C,symbolResource:R}=b;if(!R)continue;const{textInfo:k,symbolInfo:z}=R,A=z.cimSymbol;_.hitTest(d,A.symbol,C,k,n,i)&&I.push(b)}return I.sort(zt),I.map(b=>b.objectId)}queryItems(e){return this._items.size===0?[]:this._searchForItems(e)}clear(){this._items.clear(),this._index=null}async _updateItem(e,s){await e.projectAndNormalize(this._outSpatialReference),await s(e);const{size:r}=e;r[0]=r[1]=r[2]=r[3]=0,this._getSymbolBounds(e.symbolBounds,e.symbolResource,e.geometryBounds,e.size,0)}_searchIndex(e,s,r,i){return this._boundsDirty&&(this._items.forEach(n=>this._getSymbolBounds(n.symbolBounds,n.symbolResource,n.geometryBounds,n.size,0)),this._boundsDirty=!1),this._index||(this._index=be(9,n=>({minX:n.symbolBounds[0],minY:n.symbolBounds[1],maxX:n.symbolBounds[2],maxY:n.symbolBounds[3]})),this._index.load(Array.from(this._items.values()))),this._index.search({minX:e,minY:s,maxX:r,maxY:i})}_searchForItems(e){const s=this._tileInfoView.spatialReference,r=e.bounds,i=Ie(s);if(i&&s.isWrappable){const[n,a]=i.valid,o=Math.abs(r[2]-a)<J,u=Math.abs(r[0]-n)<J;if((!o||!u)&&(o||u)){const c=e.resolution;let h;h=$(o?[n,r[1],n+c*q,r[3]]:[a-c*q,r[1],a,r[3]]);const l=this._searchIndex(r[0],r[1],r[2],r[3]),d=this._searchIndex(h[0],h[1],h[2],h[3]);return[...new Set([...l,...d])]}}return this._searchIndex(r[0],r[1],r[2],r[3])}_getSymbolBounds(e,s,r,i,n){if(!s||!s.symbolInfo.linearCIM)return null;if(e||(e=$()),we(e,r),!i||i[0]===0&&i[1]===0&&i[2]===0&&i[3]===0){const{textInfo:u,symbolInfo:c}=s,h=c.cimSymbol;i||(i=[0,0,0,0]);const l=X.getSymbolInflateSize(i,h.symbol,this._cimResourceManager,n,u);i[0]=F(l[0]),i[1]=F(l[1]),i[2]=F(l[2]),i[3]=F(l[3])}const a=this._resolution,o=X.safeSize(i);return e[0]-=o*a,e[1]-=o*a,e[2]+=o*a,e[3]+=o*a,e}}class x{static getOrCreate(e,s,r){let i=s.get(e.id);return i||(i=new x(e,r),s.set(e.id,i)),i}static fromItems(e,s,r){const i=new x(e,r);for(const n of s)i.append(n);return i}constructor(e,s){this.tile=e,this.metadata=s,this.addedOrModified=[],this.removed=[],this.objectIdMap=null}get reader(){return this._reader||(this._reader=St.from(this.addedOrModified,this.tile,this.metadata)),this._reader}append(e){this.addedOrModified.push(e),e.hasAnimations&&(this.objectIdMap=this.objectIdMap||{},this.objectIdMap[e.displayId]=e.objectId)}}let w=class extends xe.IdentifiableMixin(Re){constructor(t){super(t),this._attached=!1,this._tiles=new Map,this._controller=new AbortController,this._hashToSymbolInfo=new Map,this._lastCleanup=performance.now(),this._cleanupRequired=!0,this.lastUpdateId=-1,this.renderer=null,this._updateTracking=new It({debugName:"GraphicsView2D"}),this.updateRequested=!1,this.defaultPointSymbolEnabled=!0,this._commandQueue=new ot({process:e=>{if(e.type==="update")return this._update();throw new Error("InternalError: Unsupported command")}}),this.graphicUpdateHandler=this.graphicUpdateHandler.bind(this)}destroy(){this.container.destroy(),this.view=null,this.renderer=null,this._set("graphics",null),this._controller.abort(),this._graphicStore.clear(),this._graphicStore.destroy(),this._attributeStore=null,this._hashToSymbolInfo.clear(),this._updateTracking.destroy(),this._commandQueue.destroy()}_initAttributeStore(){this._storage=new Ze({spatialReference:this.view.spatialReference,fields:new $e}),this._attributeStore=new We({isLocal:!0,update:e=>{M("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView2D.AttributeStoreView.updateStart`,{message:e}),this.container.attributeView.requestUpdate(e),this.container.requestRender(),M("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView2D.AttributeStoreView.updateEnd`,{message:e})}});const t=ht(null,[]);this._attributeStore.update(t,this._storage,null),this.container.checkHighlight=()=>this._attributeStore.hasHighlight}initialize(){this._initAttributeStore(),this._metadata=Ne.createGraphics(this.view.spatialReference),this._resourceProxy=new Xe({fetch:e=>Promise.all(e.map(s=>this.view.stage.textureManager.rasterizeItem(s))),fetchDictionary:e=>{throw new Error("InternalError: Graphics do not support Dictionary requests")}}),this.addHandles([Te(()=>this._effectiveRenderer,()=>this._pushUpdate()),this.view.graphicsTileStore.on("update",this._onTileUpdate.bind(this)),this.container.on("attach",()=>{var e;this.addHandles([this.graphics.on("change",()=>this._pushUpdate())]),(e=this._graphicStore)==null||e.destroy(),this._graphicStore=new At(this.view.spatialReference,this._cimResourceManager,this.view.featuresTilingScheme,this.view.state.scale,this._attributeStore),this._attached=!0,this.requestUpdate(),this._pushUpdate()})]),this._updateTracking.addUpdateTracking("CommandQueue",this._commandQueue.updateTracking);const t=this.view.graphicsTileStore.tiles;this._onTileUpdate({added:t,removed:[]})}get _effectiveRenderer(){return typeof this.renderer=="function"?this.renderer():this.renderer}get _cimResourceManager(){return this.view.stage.textureManager.resourceManager}get updating(){const t=!this._attached||this._updateTracking.updating;return M("esri-2d-log-updating")&&console.log(`Updating GraphicsView2D: ${t}
  -> attaching ${!this._attached}
  -> updateTracking ${this._updateTracking.updating}`),t}hitTest(t){if(!this.view||this.view.suspended)return[];const{resolution:e,rotation:s}=this.view.state,r=this._graphicStore.hitTest(t.x,t.y,2,e,s),i=new Set(r),n=this.graphics.items.reduce((a,o)=>(i.has(o.uid)&&a.set(o.uid,o),a),new Map);return r.map(a=>n.get(a)).filter(Pe)}requestUpdate(){this.updateRequested||(this.updateRequested=!0,this.requestUpdateCallback()),this.notifyChange("updating")}processUpdate(t){this.updateRequested&&(this.updateRequested=!1,this.update(t))}viewChange(){this.requestUpdate()}setHighlight(t){var s;const e=[];for(const{objectId:r,highlightFlags:i}of t){const n=(s=this._graphicStore.getItem(r))==null?void 0:s.displayId;e.push({objectId:r,highlightFlags:i,displayId:n})}this._attributeStore.setHighlight(e,t),this._pushUpdate()}graphicUpdateHandler(t){this._pushUpdate()}update(t){this.updateRequested=!1,this._attached&&this._graphicStore.updateLevel(t.state.resolution)&&this.pushUpdate()}pushUpdate(){this._pushUpdate()}_pushUpdate(){Ge(this._commandQueue.push({type:"update"}))}async _update(){try{M("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView._update start`);const t=await this._graphicStore.update(this.graphics,s=>this._getSymbolForGraphic(s),s=>this._ensureSymbolResource(s));for(const s of t.updated)this.container.restartAnimation(s.objectId);if(!t.hasAnyUpdate())return void this._attributeStore.sendUpdates();t.removed.length&&(this._cleanupRequired=!0),M("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView updateMessage`,t);const e=this._createTileMessages(t);await this._densifyItemsForDisplay(e),await this._fetchResources(e),this._write(e);for(const s of t.added)this._setFilterState(s);for(const s of t.updated)this._setFilterState(s);M("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView sendUpdate`,t),this._attributeStore.sendUpdates(),M("esri-2d-update-debug")&&console.debug(`[Id: ${this.layerId}] GraphicsView sendUpdate.await`,t)}catch{}this._cleanupSharedResources()}_createTileMessages(t){const e=new Map;for(const s of t.added){const r=this.view.graphicsTileStore.getIntersectingTiles(s.symbolBounds);for(const i of r)x.getOrCreate(i,e,this._metadata).append(s)}for(const s of t.updated){const r=this.view.graphicsTileStore.getIntersectingTiles(s.prevSymbolBounds),i=this.view.graphicsTileStore.getIntersectingTiles(s.symbolBounds);for(const n of r)x.getOrCreate(n,e,this._metadata).removed.push(s.displayId);for(const n of i)x.getOrCreate(n,e,this._metadata).append(s)}for(const s of t.removed){const r=this.view.graphicsTileStore.getIntersectingTiles(s.symbolBounds);for(const i of r)x.getOrCreate(i,e,this._metadata).removed.push(s.displayId)}return Array.from(e.values())}async _densifyItemsForDisplay(t){const e=new Map;for(const s of t)for(const r of s.addedOrModified)e.has(r)||e.set(r,r.densifyCurvedGeometryForDisplay(this.view.spatialReference));await Promise.all(e.values())}async _fetchResources(t){const e={timeZone:null,timeExtent:null};for(const{tile:s,reader:r}of t){M("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${s.id}] GraphicsView fetchResources`,t);const i=r.getCursor();for(;i.next();)for(const n of i.getMeshWriters())n.enqueueRequest(this._resourceProxy,i,s.createArcadeEvaluationOptions(e))}await this._resourceProxy.fetchEnqueuedResources()}_write(t){for(const e of t){M("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${e.tile.id}] GraphicsView write`,e);const s=this._writeMeshes(e);let r=this._tiles.get(e.tile.key);r||(r=this._createFeatureTile(e.tile.key)),M("esri-2d-update-debug")&&console.debug(`Id[${this.layerId}] Tile[${e.tile.id}] GraphicsView onTileData`,e),this.container.onTileData(r,{type:"update",modify:s,remove:e.removed,end:!1,attributeEpoch:this._attributeStore.epoch,objectIdMap:e.objectIdMap}),this.container.requestRender()}}_writeMeshes(t){const e={timeZone:null,timeExtent:null},s=new Qe(t.tile.id),r=t.reader.getCursor();for(;r.next();){s.entityStart(r.getDisplayId(),r.getZOrder());for(const i of r.getMeshWriters())i.write(s,this._resourceProxy,r,t.tile.createArcadeEvaluationOptions(e),t.tile.level);s.entityEnd()}return{...s.serialize().message,tileId:t.tile.id}}_setFilterState(t){const e=t.displayId,s=this._attributeStore.getHighlightFlags(t.objectId);this._attributeStore.setData(e,0,0,s|(t.visible?Ce:0))}_getSymbolForGraphic(t){return t.symbol!=null?t.symbol:this._effectiveRenderer!=null?this._effectiveRenderer.getSymbol(t):this._getNullSymbol(t)}async _ensureSymbolResource(t){if(!t.symbol)return;const e=await this._getSymbolInfo(t.symbol);if(!e)return;const s=e.linearCIM.filter(r=>r.type==="text");if(s.length>0){const r=await this._getTextResources(t,s);t.symbolResource={symbolInfo:e,textInfo:r}}else t.symbolResource={symbolInfo:e}}_getSymbolInfo(t){const e=t.hash();return this._hashToSymbolInfo.has(e)||this._hashToSymbolInfo.set(e,this._createSymbolInfo(e,t).catch(s=>null)),this._hashToSymbolInfo.get(e)}async _createSymbolInfo(t,e){const s=await this._convertToCIMSymbol(e),r=await this._createLinearCIM(s);return{hash:t,cimSymbol:s,linearCIM:r,meshWriters:await this._createMeshWriters(s,r)}}async _convertToCIMSymbol(t){const e=Le(t);return e.type==="web-style"?(await e.fetchCIMSymbol()).data:e}async _createLinearCIM(t){return await Promise.all(qe.fetchResources(t.symbol,this._cimResourceManager,[])),this.view.stage.cimAnalyzer.analyzeSymbolReference(t,!1)}async _createMeshWriters(t,e){De(this._controller.signal);const s=this.container.instanceStore,r=this.view.stage.meshWriterRegistry,i=await wt(t,e,s);return Promise.all(i.map(n=>r.createMeshWriter(this._storage,this._resourceProxy,{tileInfo:this.view.featuresTilingScheme.tileInfo},n)))}_onTileUpdate(t){if(t.added&&t.added.length>0)for(const e of t.added)this._updateTracking.addPromise(this._addTile(e));if(t.removed&&t.removed.length>0)for(const e of t.removed)this._removeTile(e.key)}_createFeatureTile(t){const e=this.view.featuresTilingScheme.getTileBounds($(),t),s=this.view.featuresTilingScheme.getTileResolution(t.level),r=new Ve(t,s,e[0],e[3]);return this._tiles.set(t,r),this.container.addChild(r),r}async _addTile(t){if(!this._attached)return;const e=this._graphicStore.queryItems(t);if(!e.length)return;const s=this._createFeatureTile(t.key),r=x.fromItems(t,e,this._metadata);await this._densifyItemsForDisplay([r]),await this._fetchResources([r]);const i=this._writeMeshes(r);s.onMessage({type:"append",append:i,clear:!1,end:!0,attributeEpoch:this._attributeStore.epoch,objectIdMap:r.objectIdMap})}_removeTile(t){if(!this._tiles.has(t))return;const e=this._tiles.get(t);this.container.removeChild(e),e.destroy(),this._tiles.delete(t)}_getNullSymbol(t){const e=t.geometry;return ze(e)?je:Ae(e)||ee(e)?Ue:this.defaultPointSymbolEnabled?ke:null}async _getTextResources(t,e){const s=new Array,r=new Array;for(let o=0;o<e.length;o++){const u=e[o],{resource:c,overrides:h}=u.textRasterizationParam;if((h==null?void 0:h.length)>0){const l=Ee.resolveSymbolOverrides({type:"CIMSymbolReference",primitiveOverrides:h,symbol:{type:"CIMPointSymbol",symbolLayers:[{type:"CIMVectorMarker",enable:!0,size:c.symbol.height,anchorPointUnits:"Relative",frame:{xmin:-5,ymin:-5,xmax:5,ymax:5},markerGraphics:[{type:"CIMMarkerGraphic",geometry:{x:0,y:0},symbol:c.symbol,textString:c.textString}],scaleSymbolsProportionally:!0,respectFrame:!0}]}},t,this.view.spatialReference,null,K(t.projectedGeometry),null,null);l.then(d=>{const m=d.symbolLayers[0],{textString:p}=m.markerGraphics[0];r.push({type:"cim-rasterization-info",resource:{type:"text",textString:p||"",font:c.font}}),u.text=c.textString=p||""}),s.push(l)}else r.push({type:"cim-rasterization-info",resource:c})}s.length>0&&await Promise.all(s);const i=r.map(o=>this.view.stage.textureManager.rasterizeItem(o)),n=await Promise.all(i);Fe(n);const a=new Map;for(let o=0;o<e.length;o++){const u=e[o];a.set(u.textRasterizationParam.resource.symbol,{text:u.text,glyphMosaicItems:n[o]})}return a}_cleanupSharedResources(){var r;if(!this._cleanupRequired)return;const t=performance.now();if(t-this._lastCleanup<5e3)return;this._cleanupRequired=!1,this._lastCleanup=t;const e=new Set;for(const i of this._graphicStore.items()){const n=(r=i.symbolResource)==null?void 0:r.symbolInfo.hash;e.add(n)}const s=new Set(this._hashToSymbolInfo.keys());for(const i of s.values())e.has(i)||this._hashToSymbolInfo.delete(i)}};S([v()],w.prototype,"_effectiveRenderer",null),S([v({constructOnly:!0})],w.prototype,"layerId",void 0),S([v({constructOnly:!0})],w.prototype,"requestUpdateCallback",void 0),S([v()],w.prototype,"container",void 0),S([v({constructOnly:!0})],w.prototype,"graphics",void 0),S([v()],w.prototype,"renderer",void 0),S([v()],w.prototype,"_updateTracking",void 0),S([v()],w.prototype,"updating",null),S([v()],w.prototype,"view",void 0),S([v()],w.prototype,"updateRequested",void 0),S([v()],w.prototype,"defaultPointSymbolEnabled",void 0),w=S([Oe("esri.views.2d.layers.graphics.GraphicsView2D")],w);const Qt=w;export{Qt as A};
