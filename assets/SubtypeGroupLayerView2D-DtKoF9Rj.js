import{bv as s,bw as n,a4 as d,a8 as u,aa as l}from"./index-YH06oXPr.js";import{d as g}from"./FeatureLayerView2D-C86RhFKs.js";import"./EffectView-BK6yoQV4.js";import"./featureConversionUtils-B-IgHo_p.js";import"./timeSupport-B5RGdJau.js";import"./AttributeBinsFeatureSet-hK1K12Dt.js";import"./AttributeBinsQuery-3tbSCxD0.js";import"./queryUtils-B-BXwE61.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-DM0T_yiD.js";import"./LayerView-BtsLLc0G.js";import"./Container-CfKmVpIC.js";import"./TechniqueInstance-DlEJVZBc.js";import"./UpdateTracking2D-Du5lULt9.js";import"./Utils-CQFzFntA.js";import"./BoundingBox-BO69fx0k.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-B7o7FTnK.js";import"./VertexArrayObject-CwuWgPaI.js";import"./TileContainer-DqR7b4g0.js";import"./WGLContainer-82h8EawI.js";import"./ProgramTemplate-DKTxlbfn.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-CCOEqEh_.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-D1Cp7PSL.js";import"./CIMSymbolHelper-CK_7SFAs.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-DmS0rYo6.js";import"./GeometryUtils-pvN2b2hX.js";import"./rasterizingUtils-C75GF7UV.js";import"./floatRGBA-vgjM7qDA.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-DVsIv4kt.js";import"./ShaderBuilder-BOVv14CF.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BIJg_ur1.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-Bzp6K3fY.js";import"./constants-B4mRqufT.js";import"./parquet-zjHFWbHJ.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-DfFRWiSq.js";import"./RefreshableLayerView-Gx0s1IT2.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
