import{cD as U,cE as z,cF as C,aO as G,cG as A,a_ as D,bk as R,cH as Y,cI as v,cJ as S,e as j,cp as V}from"./index-Bf8pDHYn.js";import{j as _}from"./quantizationUtils-DxnKQ0Zp.js";import{m as E,B as k}from"./utils-Cm9f8vW5.js";let f=null;const L=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function P(e,t,n){return e.x<0?e.x+=t:e.x>n&&(e.x-=t),e}function W(e,t,n,i){const r=A(n)?D(n):null,o=r?Math.round((r.valid[1]-r.valid[0])/t.scale[0]):null;return e.map(l=>{const a=new R(l.geometry);return _(t,a,a),l.geometry=r?P(a,o??0,i[0]):a,l})}function X(e,t=18,n,i,r){const o=new Float64Array(i*r);t=Math.round(V(t));let l=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY;const F=Y(n);for(const{geometry:p,attributes:b}of e){const{x:g,y:c}=p,$=Math.max(0,g-t),N=Math.max(0,c-t),M=Math.min(r,c+t),w=Math.min(i,g+t),h=+F(b);for(let m=N;m<M;m++)for(let d=$;d<w;d++){const x=m*i+d,I=S(d-g,m-c,t)*h,u=o[x]+=I;l=Math.min(l,u),a=Math.max(a,u)}}return{min:l,max:a}}function q(e){const t=L.exec(e);if(!t)return null;const{hh:n,mm:i,ss:r,ms:o}=t.groups;return Number(n)*v.hours+Number(i)*v.minutes+Number(r)*v.seconds+Number(o||0)}async function ee(e,t,n=!0){if(!t)return[];const{field:i,field2:r,field3:o,fieldDelimiter:l,fieldInfos:a,timeZone:F}=e,p=i&&(a==null?void 0:a.find(u=>u.name.toLowerCase()===i.toLowerCase())),b=!!p&&U(p),g=!!p&&z(p),c=e.valueExpression,$=e.normalizationType,N=e.normalizationField,M=e.normalizationTotal,w=[],h=e.viewInfoParams;let m=null,d=null;if(c){if(!f){const{arcadeUtils:u}=await C();f=u}f.hasGeometryOperations(c)&&await f.enableGeometryOperations(),m=f.createFunction(c),d=h?f.getViewInfo({viewingMode:h.viewingMode,scale:h.scale,spatialReference:new G(h.spatialReference)}):null}const x=e.fieldInfos,I=!(t[0]&&"declaredClass"in t[0]&&t[0].declaredClass==="esri.Graphic")&&x?{fields:x}:null;return t.forEach(u=>{const y=u.attributes;let s;if(c){const T=I?{...u,layer:I}:u,O=f.createExecContext(T,d,F);s=f.executeFunction(m,O)}else y&&(s=y[i],r?(s=`${E(s)}${l}${E(y[r])}`,o&&(s=`${s}${l}${E(y[o])}`)):typeof s=="string"&&n&&(g?s=s?new Date(s).getTime():null:b&&(s=s?q(s):null)));if($&&typeof s=="number"&&isFinite(s)){const T=y&&parseFloat(y[N]);s=k(s,$,T,M)}w.push(s)}),w}function te(e){const t=e.field,n=e.normalizationType,i=e.normalizationField;let r;return n==="field"?r="(NOT "+i+" = 0)":n!=="log"&&n!=="natural-log"&&n!=="square-root"||(r=`(${t} > 0)`),r}function ne(e,t,n){const i=t!=null?e+" >= "+t:"",r=n!=null?e+" <= "+n:"";let o="";return o=i&&r?B(i,r):i||r,o?"("+o+")":""}function B(e,t){let n=e??"";return t!=null&&t&&(n=n?"("+n+") AND ("+t+")":t),n}function ie(e,t){if(e&&e.spatialRelationship!=="intersects")return new j(t,"Only 'intersects' spatialRelationship is supported for featureFilter")}function re(e,t,n){const i=H({layer:e,fields:t});if(i.length)return new j(n,"Unknown fields: "+i.join(", ")+". You can only use fields defined in the layer schema");const r=J({layer:e,fields:t});return r.length?new j(n,"Unsupported fields: "+r.join(", ")+". You can only use fields that can be fetched i.e. AdapterFieldUsageInfo.supportsStatistics must be true"):void 0}function H(e){const t=e.layer;return e.fields.filter(n=>!t.getField(n))}function J(e){const t=e.layer;return e.fields.filter(n=>{const i=t.getFieldUsageInfo(n);return!i||!i.supportsStatistics})}export{te as F,q as I,ie as M,ne as N,re as T,B as U,ee as b,X as w,W as x};
