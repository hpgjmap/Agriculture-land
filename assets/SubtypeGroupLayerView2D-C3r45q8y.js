import{bv as s,bw as n,a4 as d,a8 as u,aa as l}from"./index-Bbz9ht2q.js";import{d as g}from"./FeatureLayerView2D-CV5XaGFX.js";import"./EffectView-B0SDR_ol.js";import"./featureConversionUtils-5RBNpERR.js";import"./timeSupport-DVRt0rkS.js";import"./AttributeBinsFeatureSet-Jwm9usrz.js";import"./AttributeBinsQuery-Ce7ONc9l.js";import"./queryUtils-BODNAQzu.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-d0j8SdFo.js";import"./LayerView-BCyAT3UQ.js";import"./Container-BUNhozt7.js";import"./TechniqueInstance-BgtkHoM9.js";import"./UpdateTracking2D-DHnIKB1g.js";import"./Utils-BNL9NDUk.js";import"./BoundingBox-DPNLEnpN.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-DE28bNqe.js";import"./VertexArrayObject-C0nD2Z3y.js";import"./TileContainer-CQfIsUGJ.js";import"./WGLContainer-CMAQuSSr.js";import"./ProgramTemplate-QikChAV7.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-AF8UNvAB.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-JnbVaF7i.js";import"./CIMSymbolHelper-BoCWEcfP.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-CPOpc-L6.js";import"./GeometryUtils-Ug5HXnwD.js";import"./rasterizingUtils-C-9guN1F.js";import"./floatRGBA-D_m-EUuV.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-BTyxTUWn.js";import"./ShaderBuilder-DMjEBv3o.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DzQoYdNH.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-DJTYqID5.js";import"./constants-B4mRqufT.js";import"./parquet-dvsN_-zN.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-CjQLxbyd.js";import"./RefreshableLayerView-CZaJjkVZ.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
