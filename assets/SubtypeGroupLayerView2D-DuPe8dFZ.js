import{bA as s,bB as n,a7 as d,ab as u,ad as l}from"./index-BMGODGjZ.js";import{d as g}from"./FeatureLayerView2D-D0hiIWdv.js";import"./EffectView-CbFs3hrU.js";import"./featureConversionUtils-Cgj0c7bm.js";import"./timeSupport-D_Ho8Qyv.js";import"./AttributeBinsFeatureSet-vRdbmMrx.js";import"./AttributeBinsQuery-Cw_vevDb.js";import"./queryUtils-BTD-NacA.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-Dc1N3hxl.js";import"./LayerView-BZnGwH1t.js";import"./Container-BDtLD1Qm.js";import"./TechniqueInstance-CtFTUiZN.js";import"./UpdateTracking2D-BQkiODbP.js";import"./Utils-2S3ohPTu.js";import"./BoundingBox-VbesezWe.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-BHopvsRv.js";import"./VertexArrayObject-CAVTZupc.js";import"./TileContainer-qIc8hf4h.js";import"./WGLContainer-DJlLGqJc.js";import"./ProgramTemplate-BcMS_fmx.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-Bpa9Y0pX.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-DY_XR-sg.js";import"./CIMSymbolHelper-D7Dvh4FW.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-DrOrLeZZ.js";import"./GeometryUtils-BqFftbHM.js";import"./rasterizingUtils-Br_SxJPB.js";import"./floatRGBA-ZpcLbuz-.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-B6hm_FPX.js";import"./ShaderBuilder-B3BiyAXN.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-Dz99LxNs.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-CozcMm9q.js";import"./constants-B4mRqufT.js";import"./parquet-C6KRXgTN.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-DzmHUhDp.js";import"./RefreshableLayerView-A-_36n8f.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
