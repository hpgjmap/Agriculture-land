import{bA as s,bB as n,ai as d,F as u,H as l}from"./index-Bf8pDHYn.js";import{d as g}from"./FeatureLayerView2D-CglDI2DS.js";import"./EffectView-Dy23aLZX.js";import"./featureConversionUtils-B6lA2kA7.js";import"./timeSupport-aWDNuepF.js";import"./AttributeBinsFeatureSet-CicnXhzh.js";import"./AttributeBinsQuery-C4gbvf4H.js";import"./queryUtils-B_jmRG-W.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-DMlgsDsP.js";import"./LayerView-CjxR6Oq2.js";import"./Container-DARcBFHm.js";import"./TechniqueInstance-CO8-vj18.js";import"./UpdateTracking2D-DlwB-_P4.js";import"./Utils-D2POqbXd.js";import"./BoundingBox-3NZ0FntG.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-Co6WH_SH.js";import"./VertexArrayObject-DXqQ6LBU.js";import"./TileContainer-ichebSa7.js";import"./WGLContainer-DGj_KB3-.js";import"./ProgramTemplate-ieDxAtMo.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-_lEFRWJw.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-uv8-rmsp.js";import"./CIMSymbolHelper-Wi7NZvOy.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-r8C4xRGy.js";import"./GeometryUtils-D_kKh68l.js";import"./rasterizingUtils-B1zX-qy3.js";import"./floatRGBA-DPjSmTGI.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-DQ0edXDh.js";import"./ShaderBuilder-CwgiUiJx.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DXHBlik_.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-oP-hzPnl.js";import"./constants-B4mRqufT.js";import"./parquet-CRkTzqdm.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-BrOQvZSP.js";import"./RefreshableLayerView-Dk-YiKPO.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
