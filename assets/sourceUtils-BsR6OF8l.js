const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/geometryEngineJSON-Bvf5zUh7.js","assets/geometryEngineBase-B0ZyeKAX.js","assets/_commonjsHelpers-DCkdB7M8.js","assets/json-Wa8cmqdu.js"])))=>i.map(i=>d[i]);
import{eq as f,er as d,es as c,et as g,ep as h,eu as m,cH as y,_ as I}from"./index-occlv2kq.js";import{n as E}from"./date-Ctp1FiBW.js";class S{constructor(){this.code=null,this.description=null}}class T{constructor(t){this.error=new S,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function a(e){return new T(e)}class _{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function B(e){return new _(e)}const u=new Set;function C(e,t,s,p=!1){u.clear();for(const n in s){const r=e.get(n);if(!r)continue;const o=w(r,s[n]);if(u.add(r.name),r&&(p||r.editable)){const l=f(r,o);if(l)return a(d(l,r,o));t[r.name]=o}}for(const n of e.requiredFields??[])if(!u.has(n.name))return a(`missing required field "${n.name}"`);return null}function w(e,t){let s=t;return h(e)&&typeof t=="string"?s=parseFloat(t):m(e)&&t!=null&&typeof t!="string"?s=String(t):y(e)&&typeof t=="string"&&(s=E(t)),g(s)}let i;function q(e,t){if(!e||!c(t))return e;if("rings"in e||"paths"in e){if(i==null)throw new TypeError("geometry engine not loaded");return i.simplify(t,e)}return e}async function A(){return i==null&&(i=await I(()=>import("./geometryEngineJSON-Bvf5zUh7.js").then(e=>e.g),__vite__mapDeps([0,1,2,3]))),i}async function P(e,t){!c(e)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await A()}const b={supportsAutoIntervalBin:!0,supportsFixedIntervalBin:!0,supportsFixedBoundariesBin:!0,supportsDateBin:!0,supportsStackBy:!0,supportsSplitBy:!0,supportsNormalization:!0,supportedStatisticTypes:["COUNT","SUM","AVG","VAR","STDDEV","MIN","MAX","PERCENTILE_CONT","PERCENTILE_DISC","CentroidAggregate","EnvelopeAggregate","ConvexHullAggregate"],supportedNormalizationTypes:["field","log","naturalLog","percentOfTotal","squareRoot"]};export{P as E,b as S,B as f,C as g,q as h,a as p};
