const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/RouteLayerInteraction-CvCLuI0q.js","assets/index-Bf8pDHYn.js","assets/index-Dtn62Xmo.css","assets/Stop-E7GI61bV.js","assets/networkEnums-BTBhU9dz.js","assets/elevationInfoUtils-B1iWyC07.js","assets/hitTestSelectUtils-nAZJcj3c.js","assets/projectVectorToVector-COcSuCxZ.js","assets/projectPointToVector-DnQbw5V4.js","assets/geodesicUtils-Dp6Jc9hp.js","assets/plane-OXGctI8H.js","assets/mat3f64-q3fE-ZOt.js","assets/mat4f64-Dk4dwAN8.js","assets/quatf64-aQ5IuZRd.js","assets/sphere-BD-yOpnP.js"])))=>i.map(i=>d[i]);
import{Z as d,cb as _,bA as p,cc as m,bB as w,bI as c,v as g,_ as y,F as o,G as n,H as f}from"./index-Bf8pDHYn.js";import{c as v,y as I,T as k,a as M,j as F,S as V,w as G}from"./Stop-E7GI61bV.js";import{S as H,y as b}from"./LayerView-CjxR6Oq2.js";import{t as P}from"./GraphicContainer-BrnghBbs.js";import{A}from"./GraphicsView2D-CAYQWrvL.js";import"./networkEnums-BTBhU9dz.js";import"./Container-DARcBFHm.js";import"./EffectView-Dy23aLZX.js";import"./AGraphicContainer-CnZ125eW.js";import"./TechniqueInstance-CO8-vj18.js";import"./UpdateTracking2D-DlwB-_P4.js";import"./Utils-D2POqbXd.js";import"./BoundingBox-3NZ0FntG.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-Co6WH_SH.js";import"./VertexArrayObject-DXqQ6LBU.js";import"./TileContainer-ichebSa7.js";import"./WGLContainer-DGj_KB3-.js";import"./ProgramTemplate-ieDxAtMo.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-_lEFRWJw.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-B6lA2kA7.js";import"./FeatureCommandQueue-uv8-rmsp.js";import"./CIMSymbolHelper-Wi7NZvOy.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-r8C4xRGy.js";import"./GeometryUtils-D_kKh68l.js";import"./rasterizingUtils-B1zX-qy3.js";import"./floatRGBA-DPjSmTGI.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-DQ0edXDh.js";import"./ShaderBuilder-CwgiUiJx.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DXHBlik_.js";import"./OverrideHelper-By5UyPBJ.js";import"./quantizationUtils-DxnKQ0Zp.js";import"./AttributeStore-Bec2Sxrs.js";import"./queryUtils-B_jmRG-W.js";import"./json-Wa8cmqdu.js";import"./timeSupport-BmYlpdkG.js";import"./mat3f64-q3fE-ZOt.js";import"./normalizeUtilsSync-BOCD-llk.js";import"./dehydratedFeatures-BQ9w89SZ.js";const C=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],h={graphic:null,property:null,oldValue:null,newValue:null};function u(t){return t instanceof v||t instanceof I||t instanceof k||t instanceof M||t instanceof F||t instanceof V||t instanceof G}function L(t){return d.isCollection(t)&&t.length&&u(t.at(0))}function T(t){return Array.isArray(t)&&t.length>0&&u(t[0])}const $=new Set(["default"]);let a=class extends H(b){constructor(){super(...arguments),this._graphics=new d,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map,this._interaction=null,this._loadInteractionPromise=null,this.interactive=!1}get _routeItems(){return new _({getCollections:()=>this.layer==null||this.destroyed?[]:[this.layer.routeInfo!=null?new d([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]})}initialize(){this.addHandles(p(()=>{const{interactive:t,suspended:e}=this;return{interactive:t,suspended:e}},({interactive:t,suspended:e})=>{const i=t&&!e;i&&this._getInteractionLoadPromise().then(r=>{r.enabled=this.interactive&&!this.suspended}),this._interaction&&(this._interaction.enabled=i)},m)),this._updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),w)}destroy(){var t;this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){var t;this._destroyGraphicsView(),(t=this._interaction)!=null&&t.enabled&&(this._interaction.enabled=!1)}get selectedNetworkFeatures(){var t;return((t=this._interaction)==null?void 0:t.selectedNetworkFeatures)??null}async create(t){if(this.interactive)return(await this._getInteractionLoadPromise()).create(t)}async fetchPopupFeaturesAtLocation(t,e){return this._graphicsView.hitTest(t).filter(({popupTemplate:i})=>!!i)}highlight(t){let e;e=u(t)?[this._getNetworkFeatureUid(t)]:T(t)?t.map(r=>this._getNetworkFeatureUid(r)):L(t)?t.map(r=>this._getNetworkFeatureUid(r)).toArray():[t.uid];const i=e.filter(c);return i.length?(this._addHighlight(i),g(()=>this._removeHighlight(i))):g()}async hitTest(t,e){if(this.suspended)return null;const i=this._graphicsView.hitTest(t).filter(c).map(s=>this._networkGraphicMap.get(s));if(!i.length)return null;const{layer:r}=this;return i.reverse().map(s=>({type:"route",layer:r,mapPoint:t,networkFeature:s}))}isUpdating(){return this._graphicsView.updating}moveEnd(){}remove(t){var e;(e=this._interaction)==null||e.remove(t)}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const e of t)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e);this._highlightIds.set(e,i+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_createGraphic(t){const e=t.toGraphic();return e.layer=this.layer,e.sourceLayer=this.layer,e}_createGraphicsView(){const t=this.view,e=()=>this.requestUpdate(),i=new P(t.featuresTilingScheme);this._graphicsView=new A({container:i,graphics:this._graphics,requestUpdateCallback:e,view:t}),this.container.addChild(i),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const e=this._networkGraphicMap.get(t);return C.indexOf(e.type)}_getInteractionLoadPromise(){return this._loadInteractionPromise||(this._loadInteractionPromise=this._loadInteraction(),this._updatingHandles.addPromise(this._loadInteractionPromise)),this._loadInteractionPromise}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}async _loadInteraction(){const{layer:t,view:e}=this,{RouteLayerInteraction:i}=await y(async()=>{const{RouteLayerInteraction:r}=await import("./RouteLayerInteraction-CvCLuI0q.js").then(s=>s.R);return{RouteLayerInteraction:r}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]));return this._interaction=new i({view:e,layer:t}),this._interaction}_removeHighlight(t){for(const e of t)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e)-1;i===0?this._highlightIds.delete(e):this._highlightIds.set(e,i)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(e=>{const i=this._networkFeatureMap.get(e);return this._networkFeatureMap.delete(e),this._networkGraphicMap.delete(i),i}));for(const e of t.removed)this.removeHandles(e)}if(t.added.length){this._graphics.addMany(t.added.map(e=>{const i=this._createGraphic(e);return i.symbol==null?null:(this._networkFeatureMap.set(e,i),this._networkGraphicMap.set(i,e),i)}).filter(c));for(const e of t.added)this.addHandles([p(()=>e.geometry,(i,r)=>{this._updateGraphic(e,"geometry",i,r)}),p(()=>e.symbol,(i,r)=>{this._updateGraphic(e,"symbol",i,r)}),p(()=>e.popupTemplate,i=>{this._networkFeatureMap.has(e)&&(this._networkFeatureMap.get(e).popupTemplate=i)})],e);this._graphics.sort((e,i)=>this._getDrawOrder(e)-this._getDrawOrder(i))}}_updateGraphic(t,e,i,r){if(!this._networkFeatureMap.has(t)){const l=this._createGraphic(t);return this._networkFeatureMap.set(t,l),this._networkGraphicMap.set(l,t),void this._graphics.add(l)}const s=this._networkFeatureMap.get(t);s[e]=i,h.graphic=s,h.property=e,h.oldValue=r,h.newValue=i,this._graphicsView.graphicUpdateHandler(h)}_updateHighlight(){const t=Array.from(this._highlightIds.keys()),e=this._getHighlightBits($.values());this._graphicsView.setHighlight(t.map(i=>({objectId:i,highlightFlags:e})))}};o([n()],a.prototype,"_graphics",void 0),o([n()],a.prototype,"_routeItems",null),o([n()],a.prototype,"_interaction",void 0),o([n()],a.prototype,"interactive",void 0),o([n({readOnly:!0})],a.prototype,"selectedNetworkFeatures",null),a=o([f("esri.views.2d.layers.RouteLayerView2D")],a);const bt=a;export{bt as default};
