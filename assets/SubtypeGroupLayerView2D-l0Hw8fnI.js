import{bA as s,bB as n,ai as d,F as u,H as l}from"./index-Dkcf8q9P.js";import{d as g}from"./FeatureLayerView2D-BaG_bwgQ.js";import"./EffectView-UH2T97Pa.js";import"./featureConversionUtils-BUy0t5zA.js";import"./timeSupport-UBHsJTgi.js";import"./AttributeBinsFeatureSet-DAusyaKG.js";import"./AttributeBinsQuery-Id3lW2tE.js";import"./queryUtils-Bkkl2QvQ.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-BvsTYyTG.js";import"./LayerView-CqZQeGDI.js";import"./Container-DgoyWtbZ.js";import"./TechniqueInstance-CZAWXxVr.js";import"./UpdateTracking2D-B5aNIOrs.js";import"./Utils-B5OhLgQV.js";import"./BoundingBox-4VuEaVe1.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-DjJZi5AY.js";import"./VertexArrayObject-CP7RIwAI.js";import"./TileContainer-Du8PIBBs.js";import"./WGLContainer-DFdi0yd4.js";import"./ProgramTemplate-BiLSChjv.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-CpYjHleA.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-BOrwQTOo.js";import"./CIMSymbolHelper-B2daWnsS.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-BWdOnQO1.js";import"./GeometryUtils-DvpkB0gX.js";import"./rasterizingUtils-S5lA3GQB.js";import"./floatRGBA-B7BOKYk9.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-BYGou_Pf.js";import"./ShaderBuilder-D8vSBg0g.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-BvTS63o3.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-pHVx852w.js";import"./constants-B4mRqufT.js";import"./parquet-CTVlkg2Z.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-KPUHotI0.js";import"./RefreshableLayerView-Xx8rRPYO.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
