import{bv as s,bw as n,a4 as d,a8 as u,aa as l}from"./index-CQBquChn.js";import{d as g}from"./FeatureLayerView2D-DwmplimO.js";import"./EffectView-C4QayK5t.js";import"./featureConversionUtils-DJbxJgWI.js";import"./timeSupport-DkOk4LrE.js";import"./AttributeBinsFeatureSet-u1boy3GK.js";import"./AttributeBinsQuery-DpFMEMZ3.js";import"./queryUtils-Bx3G0Dfp.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-LWa2RkeF.js";import"./LayerView-tN1ACaeJ.js";import"./Container-t6CJU9It.js";import"./TechniqueInstance-DJPbnmcY.js";import"./UpdateTracking2D-CSkeE7b-.js";import"./Utils-B24S_mhR.js";import"./BoundingBox-l4lKstwB.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-XM1lxQRq.js";import"./VertexArrayObject-BBrquz0v.js";import"./TileContainer-D-Dk03iL.js";import"./WGLContainer-FqDykAs3.js";import"./ProgramTemplate-Bi1KpApN.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-DmPsGYa8.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-BhXv1kFh.js";import"./CIMSymbolHelper-BzRRfUR5.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-5eFu6V3j.js";import"./GeometryUtils-DpwsxMv_.js";import"./rasterizingUtils-KlqFLBu3.js";import"./floatRGBA-DZOhmjuS.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CfHL5KOS.js";import"./ShaderBuilder-CSaJPZJV.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-kYg5B0X3.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-CGriFVsw.js";import"./constants-B4mRqufT.js";import"./parquet-DaUz92rs.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-DnUvWwSg.js";import"./RefreshableLayerView-CHT0llLn.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
