import{bv as s,bw as n,a4 as d,a8 as u,aa as l}from"./index-DrZ9WlpE.js";import{d as g}from"./FeatureLayerView2D-brHcZ5AI.js";import"./EffectView-R_cbep4s.js";import"./featureConversionUtils-BCPXUFIl.js";import"./timeSupport-C2w7VQnZ.js";import"./AttributeBinsFeatureSet-DhTNodbO.js";import"./AttributeBinsQuery-LRW-v05N.js";import"./queryUtils-CGMqnhP6.js";import"./json-Wa8cmqdu.js";import"./FixedIntervalBinParameters-BwkDbAd5.js";import"./LayerView-MTnLsCOk.js";import"./Container-CqBa46FS.js";import"./TechniqueInstance-B_q5IbOL.js";import"./UpdateTracking2D-BTSmbesM.js";import"./Utils-ZfFmEvSO.js";import"./BoundingBox-DwHqGUQL.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./FramebufferObject-CUAnJnuE.js";import"./VertexArrayObject-Djnqje80.js";import"./TileContainer-BtYWEPxj.js";import"./WGLContainer-gOqbknBz.js";import"./ProgramTemplate-C6GXgUmM.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-C-qbdkpu.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./FeatureCommandQueue-OTGxU3Ty.js";import"./CIMSymbolHelper-Dir206WJ.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-Xoh5OYnf.js";import"./GeometryUtils-DF1g7-R_.js";import"./rasterizingUtils-DQOt2TI_.js";import"./floatRGBA-B-7XJ6iE.js";import"./Rect-CUzevAry.js";import"./TechniqueType-uMFRS8dR.js";import"./GraphShaderModule-CXT0RMR4.js";import"./ShaderBuilder-DbJ3UBZY.js";import"./BindType-BBwFZqyN.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DSWTIJWW.js";import"./CircularArray-CujHzHWW.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-DkPWNAOh.js";import"./constants-B4mRqufT.js";import"./parquet-DSu_Sx1h.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-BRAEl6Uu.js";import"./RefreshableLayerView-TOz8r5aZ.js";let i=class extends g{initialize(){this.addHandles([s(()=>this.view.scale,()=>this._update(),n)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredPromise!=null,p=!this._workerProxy,m=this.dataUpdating,e=t&&(r||o||p||m);return d("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=u([l("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const si=i;export{si as default};
